<?php
//20.0.56.0 IHM/Champ/Liste/Table/Colonne/Colonne.php GF 
//VersionVI: 30F200066p
//(c) 2005-2012 PC SOFT  - Release
 if (!defined('__INC__IHM/ObjetBase.php')) { define('__INC__IHM/ObjetBase.php',true); include_once(WB_INCLUDE_PATH.'WD55e11718a84583ed04e842fb319086b2.php'); } if (!defined('__INC__IHM/Champ/Image/Image.php')) { define('__INC__IHM/Champ/Image/Image.php',true); include_once(WB_INCLUDE_PATH.'WD6fa5e60faa5f33f433b54c2f53b7cef3.php'); } class CAttributColonneCommun extends CObjetBase { var $sFichierBase = ""; var $sFichierAffiche = ""; var $sRubriqueBase = ""; var $sRubriqueAffichee = ""; var $bAvecLiaison = false; var $FichierLiaison = null; var $RubriqueLiaison = null; var $sRubriqueReliee; function CAttributColonneCommun() { parent::CObjetBase(); } function Fe5aaeca8() { Fa79fbf41('REDEF'); } function F418f91ca() { return $this->Fe5aaeca8() + 1; } function F6a54070c(&$Fichier) { if($Fichier->sNomLogique != $this->sFichierBase) { $Fichier = &Fbad7a601($this->sFichierBase); $Rubrique = &$Fichier->F133178d5($this->sRubriqueBase); return $Rubrique->F9b258a4a(); } if($this->bMultiLiaison) { $Rubrique = &$Fichier->F133178d5($this->sRubriqueBase); $nResultQuery = $Fichier->F1b8fc945($this); if(!$nResultQuery) { return ""; } if(($nResult = $Fichier->F91276a4c($nResultQuery)) != 0) { if(isset($nResult)) { $Rubrique =& F4fc992ba($this); return $Rubrique->F48bb09ec($nResult[0]); } } } else { $Rubrique =& F4fc992ba($this); if (!isset($Rubrique->Fichier)) { $Rubrique->Fichier =& $Fichier; } return $Rubrique->GetValeur(); } return null; } function F5e4dcbfa($Valeur) { if(!$this->bMultiLiaison) { $Rubrique =& F4fc992ba($this); return $Rubrique->SetValeur($Valeur); } return null; } function SetLiaisonFichier($sFichierBase, $sRubriqueBase, $sFichierRelie1 = "", $sRubriqueRelie1 = "", $sRubriqueAffichee1 = "", $sFichierRelie2 = "", $sRubriqueRelie2= "", $sRubriqueAffichee2="") { if(empty($sFichierBase)) { $this->bAvecLiaison = false; return; } $this->bAvecLiaison = true; $this->sFichierBase = $sFichierBase; $this->sRubriqueBase = $sRubriqueBase; if(!empty($sFichierRelie1)) { if(empty($sFichierRelie2)) { $this->bMultiLiaison = true; $this->sFichierAffiche = $sFichierRelie1; $this->sRubriqueAffichee = $sRubriqueAffichee1; $this->sRubriqueReliee = $sRubriqueRelie1; } else { $this->bMultiLiaison = true; $this->sFichierAffiche = array( $sFichierRelie1 , $sFichierRelie2); $this->sRubriqueAffichee = array( $sRubriqueAffichee1 , $sRubriqueAffichee2); $this->sRubriqueReliee = array($sRubriqueRelie1,$sRubriqueRelie2); } } else { $this->sFichierAffiche = $sFichierBase; $this->sRubriqueAffichee = $sRubriqueBase; } } } class CAttributZR extends CAttributColonneCommun { var $nIndiceAttribut = 0; function Fe5aaeca8() { return $this->nIndiceAttribut; } var $m_sAliasChampLie = ""; var $m_sNomProprieteLiee = ""; var $m_xValeurParDefaut=null; var $m_bValeurHTMLSetGettable = null; var $bMultiLiaison = false; var $m_nIndicePropServeurWL = null; function CAttributZR($sNomAttribut, $nIndiceAttribut, $sNomFichierBase ="", $sNomRubriqueBase ="", $sFichierRelie1 = "", $sRubriqueRelie1 = "", $sRubriqueAffichee1 = "", $sFichierRelie2 = "", $sRubriqueRelie2= "", $sRubriqueAffichee2="") { $this->Nom = $sNomAttribut; $this->nIndiceAttribut = $nIndiceAttribut; $this->SetLiaisonFichier($sNomFichierBase, $sNomRubriqueBase, $sFichierRelie1 , $sRubriqueRelie1 , $sRubriqueAffichee1 , $sFichierRelie2 , $sRubriqueRelie2, $sRubriqueAffichee2 ); } function& GetValeur() { global $MaPage; $retour = null; $szNomZR = &$MaPage->Ffc024b6b( $this->sNom ); if (!isset($szNomZR )) return $retour; if (!isset($GLOBALS[$szNomZR] )) return $retour; $retour = ($GLOBALS[$szNomZR]->m_nLigneAffichee >= 1) ? $GLOBALS[$szNomZR]->GetValAttributHTML( $this->m_sNomPHP, $GLOBALS[$szNomZR]->m_nLigneAffichee ) : $GLOBALS[$szNomZR]->GetValAttributHTML( $this->m_sNomPHP, $GLOBALS[$szNomZR]->GetValeur() ); return $retour; } function F17b9c145($sAliasChamp, $sNomPropriete) { $this->m_sAliasChampLie = $sAliasChamp; $this->m_sNomProprieteLiee = $sNomPropriete; } function F70cea20e() { return false; } } class CColonne extends CAttributColonneCommun { var $Table; var $StyleColonne; var $IndiceColonne; function Fe5aaeca8() { return $this->IndiceColonne-1; } var $bColonneLien = false; var $nTypeColonne = TYPE_COLONNE_TEXTE; var $m_nTriOptions = triTableDéfaut; var $m_bTriable; var $m_bAvecLoupe; var $bMultiLiaison = false; var $m_bAvecFiltre = false; var $m_nFiltreEncours = 0; var $m_eDeplaceInsere = 4; var $m_eAction = 0; var $m_sPageAction=null; function CColonne($Nom, &$T, $Indice = 0) { parent::CObjetBase(); $this->Nom = $Nom; $this->Table =& $T->m_sNomPHP; $this->IndiceColonne = $Indice; $this->StyleColonne = null; } function Fdc05d49f( $ValeurHTTP ) { $this->SetValeur($ValeurHTTP); } function& F3bc5682e() { $null=null; if (!isset($this->m_sPageAction)) return $null; return F9abbf335($this->m_sPageAction,IND_CHAMP); } function TableChercheFils($sElementRecherche,$bRechercheIdentique=true,$sElementParent=null,$nLigneDepart=1) { $pclTableH =& $GLOBALS[$this->Table]; if (!isset($pclTableH) || $pclTableH->GetType()!==ID_TABLEHIERARCHIQUE) return NUMLIGNE_INVALIDE; $nIndiceElementParent = null; $nProfondeurParent = null; if (isset($sElementParent)) { if (is_int($sElementParent)) { $nIndiceElementParent = max(1,intval($sElementParent)); } else { $nIndiceElementParent = $this->TableChercheFils($sElementParent,$bRechercheIdentique); } $nLigneDepart = max($nLigneDepart,$nIndiceElementParent+1); $pclLigneParent =& $pclTableH->TabLigne[$nIndiceElementParent]; $nProfondeurParent = $pclLigneParent->m_nProfondeur; } $strlenElement=utf8_strlen($sElementRecherche); for($nLigne=max(1,$nLigneDepart); array_key_exists($nLigne,$pclTableH->TabLigne) && (!isset($nProfondeurParent) || $nProfondeurParent<$pclTableH->TabLigne[$nLigne]->m_nProfondeur); ++$nLigne) { if ($this->Fcffb5d2b($nLigne,$sElementRecherche,$bRechercheIdentique,$strlenElement)) return $nLigne; } return NUMLIGNE_INVALIDE; } function SetImageDeroulee($sImage) { $GLOBALS[$this->Table]->SetImageDeroulee($sImage); } function& GetImageDeroulee() { return $GLOBALS[$this->Table]->GetImageDeroulee(); } function SetImageEnroulee($sImage) { $GLOBALS[$this->Table]->SetImageEnroulee($sImage); } function& GetImageEnroulee() { return $GLOBALS[$this->Table]->GetImageEnroulee(); } function& GetHTMLAvant() { Erreur('ErreurProprieteInconnue','',Fc34ec142("PROP_NOM_HTMLAVANT"),F3b9ec4ca($this)); return RetourErreur_Entier; } function SetHTMLAvant($sHTMLAvant) { Erreur('ErreurProprieteInconnue','',Fc34ec142("PROP_NOM_HTMLAVANT"),F3b9ec4ca($this)); } function& GetHTMLApres() { Erreur('ErreurProprieteInconnue','',Fc34ec142("PROP_NOM_HTMLAPRES"),F3b9ec4ca($this)); return RetourErreur_Entier; } function SetHTMLApres($sHTMLApres) { Erreur('ErreurProprieteInconnue','',Fc34ec142("PROP_NOM_HTMLAPRES"),F3b9ec4ca($this)); } function& GetHauteur() { Erreur('ErreurProprieteInconnue','',Fc34ec142("PROP_NOM_HAUTEUR"),F3b9ec4ca($this)); return RetourErreur_Entier; } function SetHauteur($nHauteur) { Erreur('ErreurProprieteInconnue','',Fc34ec142("PROP_NOM_HAUTEUR"),F3b9ec4ca($this)); } function SetOptionTri($nTri = triTableDéfaut) { if ($nTri == -1) $nTri = triTableDéfaut; $this->m_nTriOptions = $nTri; } function& GetOptionTri() { $RetourParDefaut = null; if ($this->F48dce54a()) return $RetourParDefaut; return $this->m_nTriOptions; } function SetCouleur($dwCoul) { if (!isset($this->StyleColonne)) { $this->StyleColonne = new FMK_Dessin_Style($dwCoul,-1); } else { $this->StyleColonne->SetCouleur($dwCoul); } if(Feef890d7()) { F9402f437($GLOBALS[$this->Table]->GetNom(), $GLOBALS[$this->Table]); $GLOBALS[$this->Table]->F8723e249($GLOBALS[$this->Table]->GetFirstIndex() + 1); } } function SetCouleurFond($dwCoul) { if (!isset($this->StyleColonne)) { $this->StyleColonne = new FMK_Dessin_Style(-1,$dwCoul); } else { $this->StyleColonne->SetCouleurFond($dwCoul); } if(Feef890d7()) { F9402f437($GLOBALS[$this->Table]->GetNom(), $GLOBALS[$this->Table]); $GLOBALS[$this->Table]->F8723e249($GLOBALS[$this->Table]->GetFirstIndex() + 1); } } function& GetCouleur() { $nRetour = -1; if(isset($this->StyleColonne)) { return $this->StyleColonne->GetCouleur(); } return $nRetour; } function& GetCouleurFond() { $nRetour = -1; if(isset($this->StyleColonne)) { return $this->StyleColonne->GetCouleurFond(); } return $nRetour; } function& Fae1e96ac() { return $this->StyleColonne; } function F2bd61426() { return isset($this->StyleColonne); } function& GetCouleurI($Indice) { $Indice = $Indice + 1; if(array_key_exists($Indice, $GLOBALS[$this->Table]->TabLigne)) { $GLOBALS[$this->Table]->TabLigne[$Indice]->F2a3fd3f7($Indice); if($GLOBALS[$this->Table]->TabLigne[$Indice]->IsSelected() == 1) { $nCouleurSelection = $GLOBALS[$this->Table]->TabLigne[$Indice]->GetCouleur(); if ($nCouleurSelection != -1) return $nCouleurSelection; } if($GLOBALS[$this->Table]->TabLigne[$Indice]->F4740c410($this->IndiceColonne)) { $Style =& $GLOBALS[$this->Table]->TabLigne[$Indice]->F44652a2c($this->IndiceColonne); $nCouleurCell = $Style->GetCouleur(); if ($nCouleurCell != -1) return $nCouleurCell; } if (isset($this->StyleColonne) && $this->StyleColonne->GetCouleur() != -1) { $nCouleurColonne = $this->StyleColonne->GetCouleur(); if ($nCouleurColonne != -1) return $nCouleurColonne; } return $GLOBALS[$this->Table]->TabLigne[$Indice]->GetCouleur(); } $nRetourParDefaut = -1; return $nRetourParDefaut; } function GetCouleurFondI($Indice) { $Indice = $Indice + 1; if(array_key_exists($Indice, $GLOBALS[$this->Table]->TabLigne)) { $GLOBALS[$this->Table]->TabLigne[$Indice]->F2a3fd3f7($Indice); if($GLOBALS[$this->Table]->TabLigne[$Indice]->IsSelected() == 1) { $nCouleurSelection = $GLOBALS[$this->Table]->TabLigne[$Indice]->GetCouleurFond(); if ($nCouleurSelection != -1) return $nCouleurSelection; } if($GLOBALS[$this->Table]->TabLigne[$Indice]->F4740c410($this->IndiceColonne)) { $Style = $GLOBALS[$this->Table]->TabLigne[$Indice]->F44652a2c($this->IndiceColonne); $nCouleurCell = $Style->GetCouleurFond(); if ($nCouleurCell != -1) return $nCouleurCell; } if (isset($this->StyleColonne) && $this->StyleColonne->GetCouleurFond() != -1) { $nCouleurColonne = $this->StyleColonne->GetCouleurFond(); if ($nCouleurColonne != -1) return $nCouleurColonne; } return $GLOBALS[$this->Table]->TabLigne[$Indice]->GetCouleurFond(); } return -1; } function F2cd08980($Indice,$nIndiceVisible) { return F5e65e3cf($this->GetValeurAfficheeI($Indice)); } function& GetValeurAfficheeI($Indice) { $sRetourParDefaut = ""; $Indice = intval($Indice + 1); if(array_key_exists($Indice, $GLOBALS[$this->Table]->TabLigne)) { return $GLOBALS[$this->Table]->TabLigne[$Indice]->GetValI($this->IndiceColonne); } return $sRetourParDefaut; } function& GetValeurAffichee() { return $this->GetValeurAfficheeI($GLOBALS[$this->Table]->Valeur-1); } function Fa19e8373($Valeur) { return $Valeur; } function& GetValeur() { return $this->GetValI($GLOBALS[$this->Table]->Valeur); } function SetValeur($NewVal) { $ChampTable = &$GLOBALS[$this->Table]; $nLigneCourante=GetValeur($ChampTable); if ($nLigneCourante>-1) { $pclCel =& $this->Fb5eda0a7($nLigneCourante); if (isset($pclCel)) { $pclCel->SetValeur($NewVal); } } } function& GetValI($Indice) { $sRetourParDefaut = ""; $pclTable =& $GLOBALS[$this->Table]; if (!isset($pclTable)) return $sRetourParDefaut; if(isset($pclTable->TabLigne[$Indice])) { $pclTable->TabLigne[$Indice]->F2a3fd3f7($Indice); return $pclTable->TabLigne[$Indice]->Fb5eda0a7($this->IndiceColonne); } elseif ($pclTable->F48dce54a() && isset($pclTable->Reglette)) { --$Indice; $bAvecPCodeFiltre = (ExecuteTraitement($pclTable->m_sNomPHP,TRT_Filtre_Page,false,true)===true); $n = $pclTable->FichierParcours->Fd172163b($pclTable->RubriqueParcours); if (!$bAvecPCodeFiltre && !isset($pclTable->m_clFiltreUser)) { if($Indice > $pclTable->nLastIndex) { $pclTable->FichierParcours->Fec3a1557($pclTable->RubriqueParcours, $pclTable->bParcoursAsc, $Indice - $pclTable->nLastIndex); } else if($Indice < $pclTable->nLastIndex) { $pclTable->FichierParcours->Fec3a1557($pclTable->RubriqueParcours, !$pclTable->bParcoursAsc, $pclTable->nLastIndex - $Indice); } } else { if ($Indice > $pclTable->nLastIndex) { $nPas = 1; $bAsc = $pclTable->bParcoursAsc; } else { $nPas = -1; $bAsc = !$pclTable->bParcoursAsc; } $nDecalageRestant = abs($pclTable->nLastIndex - $Indice); $nNbEnregLu = 0; while($nDecalageRestant>0) { $pclTable->FichierParcours->Fec3a1557($pclTable->RubriqueParcours, $bAsc,$nPas); if ( (!isset($pclTable->m_clFiltreUser) || ($pclTable->F689fe026())) && (!$bAvecPCodeFiltre || ($pclTable->Fb40d01a9($Indice-$nDecalageRestant+$nNbEnregLu+1) === nFILTRE_OK)) ) { --$nDecalageRestant; } ++$nNbEnregLu; } } $sRetourParDefaut = $pclTable->FichierParcours->EnregCourant[ $this->RubriqueLiaison->sNom ]; Fe4e65a90($n); } if(isset($pclTable->TabLigne[$Indice+1])) { $pclTable->TabLigne[$Indice+1]->F2a3fd3f7($Indice+1); return $pclTable->TabLigne[$Indice+1]->Fb5eda0a7($this->IndiceColonne); } return $sRetourParDefaut; } function SetValI($Indice, $valeur = '') { if(array_key_exists($Indice, $GLOBALS[$this->Table]->TabLigne)) { $GLOBALS[$this->Table]->TabLigne[$Indice]->SetValI($this->IndiceColonne,$valeur); } } function& Fb5eda0a7($Indice) { if(array_key_exists($Indice, $GLOBALS[$this->Table]->TabLigne)) { $GLOBALS[$this->Table]->TabLigne[$Indice]->F2a3fd3f7($Indice); return $GLOBALS[$this->Table]->TabLigne[$Indice]->Fb5eda0a7($this->IndiceColonne); } $Retour = null; return $Retour; } function& GetType() { return getRef(20001); } function F4a917fa4() { switch ($this->nTypeColonne) { case TYPE_COLONNE_CONTENEUR : return 39; case TYPE_COLONNE_INTERRUPTEUR : return 5; case TYPE_COLONNE_IMAGE : return 8; case TYPE_COLONNE_TEXTE : case TYPE_COLONNE_DATE : case TYPE_COLONNE_HEURE : case TYPE_COLONNE_NUMERIQUE : default : return 2; } } function TableCherche($Element, $bType = true, $nIndiceDepart = 1) { $Table = $GLOBALS[$this->Table]; if ($Table->GetType()===ID_TABLEHIERARCHIQUE) return $this->TableChercheFils($Element,$bType,null,$nIndiceDepart); if($Table->F48dce54a()) { $Fichier = &Fbad7a601($this->sFichierBase); $Rubrique = &$Fichier->F133178d5($this->sRubriqueBase); $nPositionParcours = $Fichier->Fd172163b($Rubrique); $nFlag = 0; if(!$bType) { $nFlag = H_GENERIQUE; } $bResult = $Fichier->F218e30b2($Rubrique, $Element, true, $nFlag); $Fichier->Fd90f4b71($Rubrique); if(isset($Rubrique->BufferParcours)) { unset($Rubrique->BufferParcours->DernierEnregLu); $Rubrique->BufferParcours->DernierEnregLu = null; } if(!$bResult || !$Fichier->bHTrouve) { if($nPositionParcours != -1) { Fe4e65a90($nPositionParcours); } return -1; } $nPosition = $Fichier->F7ce1a2b2($Table->RubriqueParcours, $Fichier->EnregCourant, $Table->bParcoursAsc); if(isset($Table->Reglette)) { $Reglette = &$Table->Reglette; $nItem = (int)ceil($nPosition / $Table->nMaxLignePage); $Reglette->F47301c2e($nItem); } if($nPositionParcours != -1) { Fe4e65a90($nPositionParcours); } return $nPosition; } $nNbLigne = count($Table->TabLigne); $strlenElement=utf8_strlen($Element); for($nIndice = $nIndiceDepart; $nIndice <= $nNbLigne; $nIndice++) { if ($this->Fcffb5d2b($nIndice,$Element,$bType,$strlenElement)) return $nIndice; } return -1; } function Fcffb5d2b($nIndice,$Element,$bType,$strlenElement=null) { $Table = $GLOBALS[$this->Table]; if(isset($Table->TabLigne[$nIndice])) { if (!isset($strlenElement)) $strlenElement = utf8_strlen($Element); $nTypeColonne = $this->GetType(); $Ligne = $Table->TabLigne[$nIndice]; $Valeur = $Ligne->GetValI($this->IndiceColonne); if($bType) { if($Element == $Valeur) { return true; } } else { switch($nTypeColonne) { case 20004: case 20005: { if (Fa4014e81($Valeur,$Element)>=0) { return true; } } break; default: if ($Element ==utf8_substr($Valeur, 0, $strlenElement)) { return true; } } } } return false; } function SetLiaisonMultiFichier($sFichierBase, $sRubriqueBase, $sFichierRelie1 = "", $sRubriqueRelie1 = "", $sRubriqueAffichee1 = "", $sFichierRelie2 = "", $sRubriqueRelie2= "", $sRubriqueAffichee2="") { $this->SetLiaisonFichier($sFichierBase, $sRubriqueBase, $sFichierRelie1 , $sRubriqueRelie1 , $sRubriqueAffichee1 , $sFichierRelie2 , $sRubriqueRelie2, $sRubriqueAffichee2); } function F66cc6b76() { $MaTable = $GLOBALS[$this->Table]; return $this->Etat == ETAT_CHAMP_ACTIF && $MaTable->Etat == ETAT_CHAMP_ACTIF && $this->Visible == true && $MaTable->nModeSelection != MODE_SELECTION_SANS; } function Fd44ca68d() { $MaTable = $GLOBALS[$this->Table]; return $this->bColonneLien && $this->Etat == ETAT_CHAMP_ACTIF && $MaTable->Etat <= ETAT_CHAMP_INACTIF && $this->Visible; } function Ff9f8c930() { return ($this->m_bAvecLoupe === true); } function Fb3d572af() { $MaTable =& $GLOBALS[$this->Table]; if (!isset($MaTable)) return false; if ($MaTable->Etat === 4 ) return false; if ($this->Etat === 4 ) return false; if ($this->m_bTriable !== true) return false; if ($MaTable->F48dce54a()) { if (!$this->bAvecLiaison) return false; if ($this->bMultiLiaison) return false; } return true; } function SetAvecLoupe($bAvecLoupe) { $this->m_bAvecLoupe = (bool)$bAvecLoupe; } function SetTriable($bAvecTri) { $this->m_bTriable = (bool)$bAvecTri; } function F9503394f() { $MaTable =& $GLOBALS[$this->Table]; if (!isset($MaTable) || false===$MaTable->m_bEstAjax) return false; switch ($this->nTypeColonne) { case TYPE_COLONNE_TEXTE: case TYPE_COLONNE_NUMERIQUE: case TYPE_COLONNE_NUMERIQUE_HP: case TYPE_COLONNE_DATE: case TYPE_COLONNE_HEURE: case TYPE_COLONNE_MONETAIRE: case TYPE_COLONNE_MONETAIRE_EURO: case TYPE_COLONNE_DUREE: case TYPE_COLONNE_INTERRUPTEUR: break; case TYPE_COLONNE_IMAGE : default : return false; } if (false===$this->Visible) return false; if ($this->Etat!=0) return false; return true; } function F46a8f50b() { switch ($this->nTypeColonne) { case TYPE_COLONNE_CONTENEUR: return 31; case TYPE_COLONNE_TEXTE: return 16; case TYPE_COLONNE_INTERRUPTEUR: return 1; case TYPE_COLONNE_IMAGE : return 28; case TYPE_COLONNE_NUMERIQUE: case TYPE_COLONNE_NUMERIQUE_HP: case TYPE_COLONNE_DATE: case TYPE_COLONNE_HEURE: case TYPE_COLONNE_MONETAIRE: case TYPE_COLONNE_MONETAIRE_EURO: case TYPE_COLONNE_DUREE: default : return $this->F78e674be(); } } } class CColonneImage extends CColonne { var $m_clImage; function CColonneImage($Nom, &$T, $Indice = 0) { parent::CColonne($Nom, $T, $Indice); $this->m_clImage = new CImage(); $this->m_clImage->bForceTailleReelle = false; $this->m_clImage->nTransparence = 0; $this->m_clImage->nModeAffichage = 6; $this->m_clImage->m_pclChampConteneur =& $T; global $MaPage; $MaPage->WB_AjouteChamp($this->Nom,uniqid($this->Nom),$this->m_clImage); } function& GetType() { return getRef(8); } function& GetValeurAfficheeI($Indice) { $Valeur = parent::GetValeurAfficheeI($Indice); $bEstUnFichier = file_exists(F9486bf1a($Valeur)); if ($bEstUnFichier) { return $Valeur; } if (empty($Valeur)) { $sRetour=''; } else { $this->m_clImage->eTypeImage = 2; $this->m_clImage->SetValeur($Valeur); $sRetour = $this->m_clImage->GetValeurHTML(); } return $sRetour; } } class CColonneConteneur extends CColonne { var $m_sAliasChampPrincipal = null; function CColonneConteneur($Nom, &$T, $Indice = 0) { parent::CColonne($Nom, $T, $Indice); } function& GetType() { return getRef(50014); } function& F33d526fc() { if (!isset($this->m_sAliasChampPrincipal)) { return $this->m_sAliasChampPrincipal; } global $MaPage; return $MaPage->TabChamp[ $this->m_sAliasChampPrincipal ]; } function lierVM($sNomVM, $sNomWL, $sNomPHP) { parent::lierVM($sNomVM,$sNomWL,$sNomPHP); $pclChampPrincipal =& $this->F33d526fc(); if (!isset($pclChampPrincipal)) return ; $pclTable =& $GLOBALS[$this->Table]; if (!isset($pclTable)) return ; $sNomPHPAtt = 'ATT_'.$sNomPHP; $sNomAtt = 'ATT_'.$sNomWL; $sAliasAtt = 'ATT_'.$this->Alias; $pclTable->AjouteAttribut($sNomPHPAtt,$sNomAtt,$sAliasAtt,$this->Fe5aaeca8()); $pclTable->SetLiaisonAttributChamp($sNomAtt, $pclChampPrincipal->Alias, 'Valeur'); } function F2cd08980($Indice,$nIndiceVisible) { return '<![CDATA[' . call_user_func_array('construireLigneZR_'.$this->F960e3ffe(), array(&$this, $Indice+1, &$nIndiceVisible)) . ']]>'; } function UpdateChamps(&$j) { return $GLOBALS[$this->Table]->UpdateChamps($j); } function RestoreChamps(&$j) { return $GLOBALS[$this->Table]->RestoreChamps($j); } } ?>