<?php
//20.0.56.0 WL/Syntaxe/PourToutElement.php GF 
//VersionVI: 30F200066p
//(c) 2006-2008 PC SOFT  - Release
 if (!defined('__INC__WL/Syntaxe/Pour.php')) { define('__INC__WL/Syntaxe/Pour.php',true); include_once(WB_INCLUDE_PATH.'WD430174a39569c744a6a1f8a95f870837.php'); } if (!defined('__INC__FMK/Chaine.php')) { define('__INC__FMK/Chaine.php',true); include_once(WB_INCLUDE_PATH.'WD55acb2e708e26f23cb8956cd93e98123.php'); } define("WBPOURTOUTELEMENT_ORDRE_CLEF",false); define("WBPOURTOUTELEMENT_ORDRE_AJOUT",!WBPOURTOUTELEMENT_ORDRE_CLEF); class FMK_Boucle_Pour_Tout_Element { var $m_ElementCourant; var $m_tabDimensionEnCours; var $m_tabDimensionMax; var $m_nNbDimensions; var $m_TableauReference; var $m_TabCle; var $m_nIndiceCleEnCours; var $m_CleReference; var $m_CleFiltre; var $m_Iterateur; var $m_nOptions; var $m_bContinue; var $m_nNombreElementAssociatif; function FMK_Boucle_Pour_Tout_Element(&$pTableau,&$Cle,&$Iterateur,$CleFiltre, $nOption) { if (!is_object($pTableau)) { $Tableau =& CreerTypeSiBesoin($pTableau,false,true); } else { if ($pTableau->m_nIsXXX !==0) { return $this->FMK_Boucle_Pour_Tout_Element($pTableau->GetValeur(),$Cle,$Iterateur,$CleFiltre, $nOption); } else { $Tableau=&$pTableau; } } $this->m_TableauReference =& $Tableau; $this->m_bContinue = true; $nTabOccurrence = count(GetValeur($this->m_TableauReference),COUNT_NORMAL); if ($nTabOccurrence == 0) { $this->m_bContinue = false; return; } CreerType($Iterateur,(is_object($Iterateur) ? $Iterateur->m_sNomWL : null),TYPEWL_NOMBRE,1); $this->m_CleFiltre =& $CleFiltre; $this->m_nOptions = VersPrimitif($nOption); $this->m_Iterateur =& $Iterateur; switch ($Tableau->F1e21db15()) { case TYPEWL_TABLEAU_ASSOCIATIF: if (!isset($Cle)){ CreerType($Cle,null,TYPEWL_CHAINE); } $this->m_CleReference =& $Cle; $this->m_nNbDimensions = ($this->m_TableauReference->Fc0527048()) ? 2 : 1; if (WBPOURTOUTELEMENT_ORDRE_CLEF) { if (!isset($this->m_CleFiltre)) { $this->m_TabCle = array_keys( $this->m_TableauReference->m_Valeur ); } else { $this->m_TabCle = array(VersPrimitif($this->m_CleFiltre)); } if ($this->m_nOptions & DepuisFin) $this->m_TabCle = array_reverse($this->m_TabCle); $nNbCle = count($this->m_TabCle); $this->m_tabDimensionMax = array_flip($this->m_TabCle); for($i=0; $i<$nNbCle; $i++) { $this->m_tabDimensionMax[ $this->m_TabCle[$i] ] = VersPrimitif(GetProp(SousType($this->m_TableauReference,$this->m_TabCle[$i]),'Occurrence')); $this->m_tabDimensionEnCours[ $this->m_TabCle[$i] ] = ($this->m_nOptions & DepuisFin) ? $this->m_tabDimensionMax[ $this->m_TabCle[$i] ] : 1; } $this->m_nIndiceCleEnCours = 0; $this->m_CleReference->SetValeur($this->m_TabCle[$this->m_nIndiceCleEnCours]); if ($this->m_nNbDimensions==1) { $this->m_ElementCourant = SousType($this->m_TableauReference,$this->m_TabCle[$this->m_nIndiceCleEnCours]); } else { $this->m_ElementCourant = SousType($this->m_TableauReference,$this->m_TabCle[$this->m_nIndiceCleEnCours],$this->m_tabDimensionEnCours[ $this->m_TabCle[$this->m_nIndiceCleEnCours] ]); } } elseif (WBPOURTOUTELEMENT_ORDRE_AJOUT) { $this->m_nNombreElementAssociatif = count($this->m_TableauReference->m_tabOrdreAjout,COUNT_NORMAL); $this->m_nIndiceCleEnCours = (($this->m_nOptions & DepuisFin) ? $this->m_nNombreElementAssociatif : 1); $this->m_CleReference->SetValeur($this->m_TableauReference->m_tabOrdreAjout[$this->m_nIndiceCleEnCours-1][0]); if ($this->m_nNbDimensions==1) { $this->m_ElementCourant = SousType($this->m_TableauReference,$this->m_TableauReference->m_tabOrdreAjout[$this->m_nIndiceCleEnCours-1][0]); } else { $this->m_ElementCourant = SousType($this->m_TableauReference,$this->m_TableauReference->m_tabOrdreAjout[$this->m_nIndiceCleEnCours-1][0],$this->m_TableauReference->m_tabOrdreAjout[$this->m_nIndiceCleEnCours-1][1]); } if (isset($this->m_CleFiltre) && ($this->m_CleFiltre != VersPrimitif($this->m_CleReference))) { $this->continuer(); $this->m_Iterateur->F5e73eabc(); return; } } break; case TYPEWL_TABLEAU: case TYPEWL_TABLEAU_FIXE: $this->m_CleFiltre = VersPrimitif($CleFiltre); if (!isset($Cle)) { CreerType($Cle,null,TYPEWL_NOMBRE); } $this->m_CleReference =& $Cle; if ($Tableau->Fc30d7e5d()) { $this->m_nNbDimensions = $this->m_TableauReference->Fa6cd7f2a(); $this->m_tabDimensionMax = array_fill(1,$this->m_nNbDimensions,1); $this->m_tabDimensionMax = array(1=>$nTabOccurrence); $tmp = GetValeur( SousType($this->m_TableauReference,1) ); for($i=2; $i<=$this->m_nNbDimensions; $i++) { $clSousType = null; unset($clSousType); $clSousType = F5c29b77c( $this->m_TableauReference , array_fill(0,$i-1,1) ); $tmp = GetValeur( $clSousType ); $this->m_tabDimensionMax[] = count($tmp->m_Valeur,COUNT_NORMAL); } if ($this->m_nOptions & DepuisFin) { $this->m_ElementCourant =& F5c29b77c($this->m_TableauReference, array_values($this->m_tabDimensionMax)); $this->m_tabDimensionEnCours = $this->m_tabDimensionMax; } else { $this->m_ElementCourant =& SousType($clSousType,1); $this->m_tabDimensionEnCours = array_fill(1,$this->m_nNbDimensions,1); } } else { $this->m_nNbDimensions = 1; $this->m_tabDimensionEnCours = array(1=>($this->m_nOptions&DepuisFin)?$nTabOccurrence:1); $this->m_tabDimensionMax = array(1=>$nTabOccurrence); $this->m_ElementCourant = SousType($this->m_TableauReference,$this->m_tabDimensionEnCours[1]); } $this->m_CleReference->SetValeur($this->m_Iterateur->GetValeur()); if (isset($this->m_CleFiltre) && ($this->m_CleFiltre != VersPrimitif($this->m_ElementCourant))) { $this->continuer(); $this->m_Iterateur->F5e73eabc(); return; } break; default: Fe81a7f9e('ELEMENT_DOIT_ETRE_TABLEAU'); } if ($this->m_nOptions & DepuisValeur) { $this->m_ElementCourant = _clone($this->m_ElementCourant); } } function continuer() { switch ($this->m_TableauReference->F1e21db15()) { case TYPEWL_TABLEAU_ASSOCIATIF: if (WBPOURTOUTELEMENT_ORDRE_CLEF) { if ($this->m_nOptions & DepuisFin) { --$this->m_tabDimensionEnCours[$this->m_TabCle[$this->m_nIndiceCleEnCours]]; } else { ++$this->m_tabDimensionEnCours[$this->m_TabCle[$this->m_nIndiceCleEnCours]]; } if ( ($this->m_tabDimensionEnCours[$this->m_TabCle[$this->m_nIndiceCleEnCours]] > $this->m_tabDimensionMax[$this->m_TabCle[$this->m_nIndiceCleEnCours]]) || ($this->m_tabDimensionEnCours[$this->m_TabCle[$this->m_nIndiceCleEnCours]] < 1 ) ) { ++$this->m_nIndiceCleEnCours; if (!isset($this->m_TabCle[$this->m_nIndiceCleEnCours])) { $this->m_bContinue = false; return; } } $this->m_CleReference->SetValeur($this->m_TabCle[$this->m_nIndiceCleEnCours]); if ($this->m_nNbDimensions==1) { $this->m_ElementCourant = SousType($this->m_TableauReference,$this->m_TabCle[$this->m_nIndiceCleEnCours]); } else { $this->m_ElementCourant = SousType($this->m_TableauReference,$this->m_TabCle[$this->m_nIndiceCleEnCours],$this->m_tabDimensionEnCours[$this->m_TabCle[$this->m_nIndiceCleEnCours]]); } } elseif (WBPOURTOUTELEMENT_ORDRE_AJOUT) { $this->m_nIndiceCleEnCours = ($this->m_nOptions & DepuisFin) ? $this->m_nIndiceCleEnCours-1 : $this->m_nIndiceCleEnCours+1; if ( ($this->m_nIndiceCleEnCours == $this->m_nNombreElementAssociatif+1) || ($this->m_nIndiceCleEnCours == 0)) { $this->m_bContinue = false; return; } $this->m_CleReference->SetValeur($this->m_TableauReference->m_tabOrdreAjout[$this->m_nIndiceCleEnCours-1][0]); if ($this->m_nNbDimensions==1) { $this->m_ElementCourant = SousType($this->m_TableauReference,$this->m_TableauReference->m_tabOrdreAjout[$this->m_nIndiceCleEnCours-1][0]); } else { $this->m_ElementCourant = SousType($this->m_TableauReference,$this->m_TableauReference->m_tabOrdreAjout[$this->m_nIndiceCleEnCours-1][0],$this->m_TableauReference->m_tabOrdreAjout[$this->m_nIndiceCleEnCours-1][1]); } } if (isset($this->m_CleFiltre) && ($this->m_CleFiltre != VersPrimitif($this->m_CleReference))) { $this->continuer(); } else { $this->m_Iterateur->Fa05668f4(); } break; case TYPEWL_TABLEAU: case TYPEWL_TABLEAU_FIXE: if ($this->m_nOptions & DepuisFin) { --$this->m_tabDimensionEnCours[ $this->m_nNbDimensions ]; } else { ++$this->m_tabDimensionEnCours[ $this->m_nNbDimensions ]; } for($i=$this->m_nNbDimensions; $i>0; $i--) { if ( ($this->m_tabDimensionEnCours[$i] > $this->m_tabDimensionMax[$i]) || ($this->m_tabDimensionEnCours[$i] < 1 ) ) { $this->m_tabDimensionEnCours[$i] = ($this->m_nOptions & DepuisFin) ? $this->m_tabDimensionMax[$i] : 1; if (!isset($this->m_tabDimensionEnCours[$i-1])) { $this->m_bContinue = false; return; } if ($this->m_nOptions & DepuisFin) { $this->m_tabDimensionEnCours[$i-1]--; } else { $this->m_tabDimensionEnCours[$i-1]++; } } else { break; } } if ($this->m_nNbDimensions>1) { $this->m_ElementCourant = F5c29b77c($this->m_TableauReference,array_values($this->m_tabDimensionEnCours)); } else { $this->m_ElementCourant = SousType($this->m_TableauReference,$this->m_tabDimensionEnCours[1]); } if (isset($this->m_CleFiltre) && ($this->m_CleFiltre != VersPrimitif($this->m_ElementCourant))) { $this->continuer(); } else { $this->m_Iterateur->Fa05668f4(); $this->m_CleReference->SetValeur($this->m_Iterateur->GetValeur()); } break; default: Fe81a7f9e('ELEMENT_DOIT_ETRE_TABLEAU'); } if ($this->m_nOptions & DepuisValeur) { $this->m_ElementCourant = _clone($this->m_ElementCourant); } } function bContinuer() { return (isset($this->m_ElementCourant) && $this->m_bContinue); } } ?>