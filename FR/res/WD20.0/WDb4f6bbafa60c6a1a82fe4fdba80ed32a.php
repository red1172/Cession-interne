<?php
//20.0.56.0 FMK/Pear/SQL/Compiler.php GF  Based on LGPL Project SQL_Parser which can be found at http://pear.php.net/package/SQL_Parser 
//VersionVI: 30F200066p
//(c) 2005-2012 PC SOFT  - Release
 if (!defined('__INC__FMK/Pear/PEAR.php')) { define('__INC__FMK/Pear/PEAR.php',true); include_once(WB_INCLUDE_PATH.'WD1d5ce3b8322119ec5bb186d0cf889fcc.php'); } class SQL_Compiler { var $tree; function SQL_Compiler($array = null) { $this->tree = $array; } function Ff32ac68e($arg) { switch ($arg['type']) { case 'ident': case 'real_val': case 'int_val': $value = $arg['value']; break; case 'text_val': $value = '\''.$arg['value'].'\''; break; case 'subclause': $value = '('.$this->Fa22321df($arg['value']).')'; break; default: return $GLOBALS['PEAR']->Fb9eb0792('Unknown type: '.$arg['type']); } return $value; } function Feadbbc07($arg) { for ($i = 0; $i < sizeof ($arg['type']); $i++) { switch ($arg['type'][$i]) { case 'ident': case 'real_val': case 'int_val': $value[] = $arg['value'][$i]; break; case 'text_val': $value[] = '\''.$arg['value'][$i].'\''; break; default: return $GLOBALS['PEAR']->Fb9eb0792('Unknown type: '.$arg['type']); } } $value ='('.utf8_implode(', ', $value).')'; return $value; } function Fa22321df($where_clause) { $value = ''; if (isset ($where_clause['arg_1']['value'])) { $value = $this->Ff32ac68e($where_clause['arg_1']); if ($GLOBALS['PEAR']->F81ae42f2($value)) { return $value; } $sql = $value; } else { $value = $this->Fa22321df($where_clause['arg_1']); if ($GLOBALS['PEAR']->F81ae42f2($value)) { return $value; } $sql = $value; } if (isset ($where_clause['op'])) { if ($where_clause['op'] == 'in') { $value = $this->Feadbbc07($where_clause['arg_2']); if ($GLOBALS['PEAR']->F81ae42f2($value)) { return $value; } $sql .= ' '.$where_clause['op'].' '.$value; } elseif ($where_clause['op'] == 'is') { if (isset ($where_clause['neg'])) { $value = 'not null'; } else { $value = 'null'; } $sql .= ' is '.$value; } else { $sql .= ' '.$where_clause['op'].' '; if (isset ($where_clause['arg_2']['value'])) { $value = $this->Ff32ac68e($where_clause['arg_2']); if ($GLOBALS['PEAR']->F81ae42f2($value)) { return $value; } $sql .= $value; } else { $value = $this->Fa22321df($where_clause['arg_2']); if ($GLOBALS['PEAR']->F81ae42f2($value)) { return $value; } $sql .= $value; } } } return $sql; } function F688dd127() { $sql = 'select '; if (isset($this->tree['set_quantifier'])) { $sql .= $this->tree['set_quantifier'].' '; } for ($i = 0; $i < sizeof ($this->tree['column_names']); $i++) { $column = $this->tree['column_names'][$i]; if ($this->tree['column_aliases'][$i] != '') { $column .= ' as '.$this->tree['column_aliases'][$i]; } $column_names[] = $column; } for ($i = 0; $i < sizeof ($this->tree['set_function']); $i++) { $column = $this->tree['set_function'][$i]['name'].'('; if (isset ($this->tree['set_function'][$i]['distinct'])) { $column .= 'distinct '; } if (isset ($this->tree['set_function'][$i]['arg'])) { $column .= utf8_implode (',', $this->tree['set_function'][$i]['arg']); } $column .= ')'; if ($this->tree['set_function'][$i]['alias'] != '') { $column .= ' as '.$this->tree['set_function'][$i]['alias']; } $column_names[] = $column; } if (isset($column_names)) { $sql .= utf8_implode (", ", $column_names); } $sql .= ' from '; for ($i = 0; $i < sizeof ($this->tree['table_names']); $i++) { $sql .= $this->tree['table_names'][$i]; if ($this->tree['table_aliases'][$i] != '') { $sql .= ' as '.$this->tree['table_aliases'][$i]; } if ($this->tree['table_join_clause'][$i] != '') { $search_string = $this->Fa22321df($this->tree['table_join_clause'][$i]); if ($GLOBALS['PEAR']->F81ae42f2($search_string)) { return $search_string; } $sql .= ' on '.$search_string; } if (isset($this->tree['table_join'][$i])) { $sql .= ' '.$this->tree['table_join'][$i].' '; } } if (isset($this->tree['where_clause'])) { $search_string = $this->Fa22321df($this->tree['where_clause']); if ($GLOBALS['PEAR']->F81ae42f2($search_string)) { return $search_string; } $sql .= ' where '.$search_string; } if (isset ($this->tree['group_by'])) { $sql .= ' group by '.utf8_implode(', ', $this->tree['group_by']); } if (isset ($this->tree['sort_order'])) { foreach ($this->tree['sort_order'] as $key => $value) { $sort_order[] = $key.' '.$value; } $sql .= ' order by '.utf8_implode(', ', $sort_order); } if (isset ($this->tree['limit_clause'])) { $sql .= ' limit '.$this->tree['limit_clause']['start'].','.$this->tree['limit_clause']['length']; } return $sql; } function F1eef926e() { $sql = 'update '.utf8_implode(', ', $this->tree['table_names']); for ($i = 0; $i < sizeof ($this->tree['column_names']); $i++) { $set_columns[] = $this->tree['column_names'][$i].' = '.$this->Ff32ac68e($this->tree['values'][$i]); } $sql .= ' set '.utf8_implode (', ', $set_columns); if (isset($this->tree['where_clause'])) { $search_string = $this->Fa22321df($this->tree['where_clause']); if ($GLOBALS['PEAR']->F81ae42f2($search_string)) { return $search_string; } $sql .= ' where '.$search_string; } return $sql; } function F9a9beb07() { $sql = 'delete from '.utf8_implode(', ', $this->tree['table_names']); if (isset($this->tree['where_clause'])) { $search_string = $this->Fa22321df($this->tree['where_clause']); if ($GLOBALS['PEAR']->F81ae42f2($search_string)) { return $search_string; } $sql .= ' where '.$search_string; } return $sql; } function Fab491e2a() { $sql = 'insert into '.$this->tree['table_names'][0].' ('. utf8_implode(', ', $this->tree['column_names']).') values ('; for ($i = 0; $i < sizeof ($this->tree['values']); $i++) { $value = $this->Ff32ac68e($this->tree['values'][$i]); if ($GLOBALS['PEAR']->F81ae42f2($value)) { return $value; } $value_array[] = $value; } $sql .= utf8_implode(', ', $value_array).')'; return $sql; } function compile($array = null) { $this->tree = $array; switch ($this->tree['command']) { case 'select': return $this->F688dd127(); break; case 'update': return $this->F1eef926e(); break; case 'delete': return $this->F9a9beb07(); break; case 'insert': return $this->Fab491e2a(); break; case 'create': case 'drop': case 'modify': default: return $GLOBALS['PEAR']->Fb9eb0792('Unknown action: '.$this->tree['command']); } } } ?>