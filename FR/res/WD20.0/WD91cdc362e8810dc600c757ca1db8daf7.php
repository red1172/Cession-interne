<?php
//20.0.56.0 IHM/Champ/Liste/ZoneRepetee/ZoneRepeteeAjax.php GF 
//VersionVI: 30F200066p
//(c) 2005-2012 PC SOFT  - Release
 if (!defined('__INC__IHM/Champ/Liste/ZoneRepetee/ZoneRepetee.php')) { define('__INC__IHM/Champ/Liste/ZoneRepetee/ZoneRepetee.php',true); include_once(WB_INCLUDE_PATH.'WDc8ebf9c835db84fcef0c84d5d914806f.php'); } class CZoneRepeteeAjax extends CZoneRepetee { function CZoneRepeteeAjax() { parent::CZoneRepetee(); $this->m_bEstAjax = true; } function SetVisible( $bVisible ) { $this->Visible = $bVisible; if(Feef890d7()) { F055fb2fe($GLOBALS[$this->ZR]->GetNom(), $GLOBALS[$this->ZR]); $GLOBALS[$this->ZR]->Ff922bb0a($this->Indice); } } function F0cc23d89() { $sResultat = "<SELECTIONS>"; $sResultat .= ($this->Valeur!=-1) ? FMK_ChaineConstruit("<SELECTION>%1</SELECTION>", ($this->Valeur-1)) : ''; $sResultat .= "</SELECTIONS>"; return $sResultat; } function F7ba80b22($nIndiceDepart, $nNbLigne, &$nNbElementsVisibles) { $sResultat = '<LIGNES>'; $nNbLigneTotal = $this->F1ac18ca4(); if($this->F48dce54a()) { $nMaxLignePage = $this->F7b66f7f8(); $this->SetMaxLignePage($nNbLigne); if ($this->nFirstIndex != $nIndiceDepart) { $this->SetFirstIndex($nIndiceDepart); } elseif ( $nNbLigneTotal>count($this->TabLigne,COUNT_NORMAL) ) { $bIlFautRecharger = false; for($i=$nIndiceDepart+1; $i<=$nIndiceDepart+$nNbLigne; ++$i) { if (!isset($this->TabLigne[$i])) { $bIlFautRecharger = true; break; } } if ($bIlFautRecharger) $this->SetFirstIndex($nIndiceDepart); } $this->SetMaxLignePage($nMaxLignePage); } $nNbLigne = min($nNbLigneTotal-$nIndiceDepart,$nNbLigne); if($nIndiceDepart >= 0 && $nIndiceDepart < $nNbLigneTotal) { $nNbLignesTransmises = 0; $rnNbCellulesVides = 0; $nLignePosAbsolue = $nIndiceDepart-1; for($nIndex=0; ( ($nNbLigne == 0 || $nNbLignesTransmises < $nNbLigne) && (($nIndex+$nIndiceDepart)<$nNbLigneTotal) ); ++$nIndex) { $nIndiceRuptureVisibleSiRepliee = 0; $nLignePosAbsolue = $this->F0f3ddc5a($nLignePosAbsolue, $nIndiceRuptureVisibleSiRepliee); if (NUMLIGNE_INVALIDE == $nLignePosAbsolue) break; $nIndiceVisible = $nNbLignesTransmises + $nIndiceDepart; $nIndiceMemoire = $nLignePosAbsolue + 1; if (!isset($pclIterateur)) { $tmp_nMaxLignePage=$this->nMaxLignePage; $this->nMaxLignePage=0; $pclIterateur=&CIterateurChampLignes_s_pclCreate($this,$nIndiceLigneVisible); $this->nMaxLignePage=$tmp_nMaxLignePage; } while($pclIterateur->vnGetIndiceWL()!=$nIndiceMemoire && $pclIterateur->vbParcoursNonFini()) { $pclIterateur->vParcoursAvance(); } $pclLigne =& $this->TabLigne[$nIndiceMemoire]; if (!isset($pclLigne) || $pclLigne->Visible !== true) { continue; } ++$nNbElementsVisibles; $sResultat .= '<LIGNE NUMERO="'.$nIndiceVisible.'" POSABSOLUE="'. $nLignePosAbsolue .'"'; $bRuptureHaut = $this->F46bf4b9c($nLignePosAbsolue,true); $bRuptureBas = $this->F46bf4b9c($nLignePosAbsolue,false); $nLignePosVisibleEff = 0; $nColonneEff = 0; if ($this->nNbColonneParLigne == 1) { $nLignePosVisibleEff = $nIndiceVisible; $nColonneEff = 0; } elseif (count($this->TabRupture,COUNT_NORMAL) == 0) { $nLignePosVisibleEff = intval($nIndiceVisible / $this->nNbColonneParLigne); $nColonneEff = ($nIndiceVisible % $this->nNbColonneParLigne); } else { $nLignePosVisibleOffset = $nIndiceVisible + $rnNbCellulesVides; $nLignePosVisibleEff = intval( $nLignePosVisibleOffset / $this->nNbColonneParLigne ); $nColonneEff = ($nLignePosVisibleOffset % $this->nNbColonneParLigne); if (false !== $bRuptureBas) { $rnNbCellulesVides += $this->nNbColonneParLigne - ($nLignePosVisibleOffset % $this->nNbColonneParLigne) - 1; } } $sResultat .= ' LIGNEEFF="'. $nLignePosVisibleEff .'" COLONNEEFF="'. $nColonneEff .'"'; if (false !== $this->bLigneRepliee()) { $nIndiceRuptureVisibleSiRepliee = 0; $nLignePosAbsolueSuivante = $this->F0f3ddc5a($nLignePosAbsolue, $nIndiceRuptureVisibleSiRepliee); if (NUMLIGNE_INVALIDE === $nLignePosAbsolueSuivante) { $nLignePosAbsolueSuivante = $this->F1ac18ca4(); } $sResultat .=' NBREPLIEES="' . ($nLignePosAbsolueSuivante - $nLignePosAbsolue) . '"'; } $sResultat .= '><COLONNE'; $sCouleur = $this->F24bef4f5($nIndiceMemoire); if ($sCouleur!=-1) $sResultat.= ' COULEUR="#' . $sCouleur .'"'; $sCouleur = $this->F3e95d7a4($nIndiceMemoire); if ($sCouleur!=-1) $sResultat.= ' COULEURFOND="#' . $sCouleur .'"'; $sResultat.='>'; $sResultat .= $this->F4bdd5276($nIndiceMemoire,$nIndiceVisible); ++$nNbLignesTransmises; $sResultat .= '</COLONNE>'; XVERIFY($this->F0dcb9be9($sResultat, $nLignePosAbsolue, $nIndiceVisible, $bRuptureHaut, $bRuptureBas)); $sResultat .= '</LIGNE>'; } $pclIterateur=null; unset($pclIterateur); $this->RestoreChamps(-1); } $sResultat .= '</LIGNES>'; return $sResultat; } function Fd937dfb3($nIndiceDepart, $nNbLigne, $nDebut=null) { return $this->F077087a8($nIndiceDepart, $nNbLigne, $nDebut, false); } function F64e04ce8($nIndiceDepart, $nNbLigne, $nDebut=null) { return $this->F077087a8($nIndiceDepart, $nNbLigne, $nDebut,true); } function F077087a8($nIndiceDepart, $nNbLigne, $nDebut=null,$bAppelDepuisAjaxInline=false) { if (!isset($nDebut)) { if (isset($this->m_nIndiceAffichage)) { $nDebut = $this->m_nIndiceAffichage; $this->m_nIndiceAffichage=null; } else { $nDebut = -1; } } $sResultatSelection = $this->F0cc23d89(); $nNbElementsVisibles = 0; $sResultatLignes = $this->F7ba80b22($nIndiceDepart, $nNbLigne, $nNbElementsVisibles); $nNbElementsVisibles = $this->F0de68f17(); if($nDebut > 0) { $sResultatListe = FMK_ChaineConstruit('<LISTE NOMBRE="%1" FIN="%2" TYPE="%3" DEBUT="%4" RUPTURES="%5" HAUTEURLIGNEVARIABLE="%6">', $nNbElementsVisibles, '1', $this->F4a917fa4(), $nDebut - 1,VersChaine($this->Fa2c5b186()), VersChaine($this->m_bHauteurLigneVariable)); $this->Valeur= $nDebut; } else { $sResultatListe = FMK_ChaineConstruit('<LISTE NOMBRE="%1" FIN="%2" TYPE="%3" RUPTURES="%4" HAUTEURLIGNEVARIABLE="%5"', $nNbElementsVisibles, '1', $this->F4a917fa4(),VersChaine($this->Fa2c5b186()) ,VersChaine($this->m_bHauteurLigneVariable)); if ( (isset($this->Reglette)) && ($this->Reglette->bClicSurRegletteEnCours) ) { $sResultatListe .= ' DEBUT="'.$this->GetFirstIndex().'"'; $this->Reglette->bClicSurRegletteEnCours = false; } $sResultatListe .= '>'; } return $sResultatListe . $sResultatSelection . $sResultatLignes . '</LISTE>'; } function Fc4748612($params) { $nPositionCourante = null; $nIndiceLigneModif = $params['LIGNE'] + 1; if(isset($this->TabLigne[$nIndiceLigneModif])) { $Ligne = &$this->TabLigne[$nIndiceLigneModif]; $bModifFichierLiaison = false; if($this->F48dce54a()) { if(isset($this->TabPosition[$nIndiceLigneModif])) { $nPositionCourante = $this->FichierParcours->Fd172163b($this->RubriqueParcours); if(Fe4e65a90($this->TabPosition[$nIndiceLigneModif], H_RP_CONSERVE)) { $bModifFichierLiaison = true; } } } foreach ($params as $Cle => $Valeur) { $sPrefixe = 'zrl_'.$nIndiceLigneModif.'_'; if(utf8_strpos($Cle, $sPrefixe) === 0) { $sAliasAttribut = utf8_substr($Cle, utf8_strlen($sPrefixe)); $Attribut = &$this->F1f9cec38($sAliasAttribut); if(isset($Attribut)) { $NumAttribut = $Attribut->nIndiceAttribut; if (!isset($GLOBALS['MaPage']->TabChamp[$Attribut->m_sAliasChampLie])) { $Ligne->TabValeur[$NumAttribut] = $Valeur; } else { $pclChampLie =& $GLOBALS['MaPage']->TabChamp[$Attribut->m_sAliasChampLie]; $Ligne->TabValeur[$NumAttribut] = $pclChampLie->Ff11ff472($Valeur); } if($bModifFichierLiaison) { $Attribut->F5e4dcbfa($Valeur); } $this->Valeur = $nIndiceLigneModif; } } } } if($bModifFichierLiaison) { if($this->FichierParcours->F3f143f5b(0)) { Fbd3b8aac($this->TabPosition[$nIndiceLigneModif]); $this->TabPosition[$nIndiceLigneModif] = $this->FichierParcours->Fd172163b($this->RubriqueParcours); } } if(isset($nPositionCourante)) { Fe4e65a90($nPositionCourante); } return $this->Fd937dfb3($nIndiceLigneModif - 1, 1); } function GetFirstIndex() { if(Feef890d7() || ($this->nMaxLignePage == 0)) { return parent::GetFirstIndex(); } if ($this->Valeur > - 1) return $this->Valeur - 1; return $this->nFirstIndex; } function pszGetAjaxInitInline() { FMK_Charge('WL/AJAX/Ajax.php',false); global $MaPage; $this->F8723e249($this->GetFirstIndex() + 1); F3ecf4149(true); global $WB_ContexteAjax; $WB_ContexteAjax = new FMK_ContexteAjax(); $return = utf8_str_replace("\r","\\r",utf8_str_replace("\n","\\n",addslashes(Fd02cc4ce($MaPage->bUTF8)."\n".$this->F64e04ce8(0,$this->F1ac18ca4())))); F3ecf4149(false); return utf8_str_replace('<','\\x3C',utf8_str_replace('>','\\x3E',$return)); } } ?>