<?php
//20.0.56.0 IHM/Champ/Liste/ZoneRepetee/ZoneRepetee.php GF 
//VersionVI: 30F200066p
//(c) 2005-2012 PC SOFT  - Release
 if (!defined('__INC__IHM/Champ/Liste/Liste.php')) { define('__INC__IHM/Champ/Liste/Liste.php',true); include_once(WB_INCLUDE_PATH.'WD83a9f9fff5598133a55ffc6567590f9e.php'); } if (!defined('__INC__IHM/Champ/Liste/Table/LigneTable.php')) { define('__INC__IHM/Champ/Liste/Table/LigneTable.php',true); include_once(WB_INCLUDE_PATH.'WDa97a9c08804dc165a4606ca1d64dee7f.php'); } if (!defined('__INC__IHM/Champ/Liste/Table/Colonne/Colonne.php')) { define('__INC__IHM/Champ/Liste/Table/Colonne/Colonne.php',true); include_once(WB_INCLUDE_PATH.'WD3822829e5f2af4a164b121dbfb7ea8b2.php'); } if (!defined('__INC__FMK/Dessin/Style.php')) { define('__INC__FMK/Dessin/Style.php',true); include_once(WB_INCLUDE_PATH.'WDe97303bfc6e1e49621ac71fab8c177e5.php'); } class CZoneRepetee extends CTableZRCommun { var $StyleLigneImpaire; var $StyleLignePaire; var $bLineaire = false; function CZoneRepetee() { parent::CTableZRCommun(); $this->bEstZoneRepetee = true; $this->StyleLignePaire = new FMK_Dessin_Style(); $this->StyleLigneImpaire= new FMK_Dessin_Style(); } function& Fd135d1c5($Valeur) { $pclLigne = new CLigneZR($this,$Valeur); return $pclLigne; } function& F24bef4f5($IndiceLigne, $IndiceColonne = -1) { if(array_key_exists($IndiceLigne,$this->TabLigne)) { if($this->TabLigne[$IndiceLigne]->F2bd61426()) { $Style =& $this->TabLigne[$IndiceLigne]->Feb7b0854(); if($Style->GetCouleur() != -1) { return $Style->GetCouleur(); } } } if($this->F3337675a($IndiceLigne)%2 == 0) { return $this->StyleLignePaire->GetCouleur(); } else { return $this->StyleLigneImpaire->GetCouleur(); } } function& F3e95d7a4($IndiceLigne, $IndiceColonne = -1) { if(array_key_exists($IndiceLigne,$this->TabLigne)) { if($this->TabLigne[$IndiceLigne]->F2bd61426()) { $Style =& $this->TabLigne[$IndiceLigne]->Feb7b0854(); if($Style->GetCouleurFond() != -1) { return $Style->GetCouleurFond(); } } } if($this->F3337675a($IndiceLigne)%2 == 0) { return $this->StyleLignePaire->GetCouleurFond(); } else { return $this->StyleLigneImpaire->GetCouleurFond(); } } function& GetOccurrence() { if($this->F48dce54a()) { $nOccurrence = $this->GetLastIndex() - $this->nFirstIndex + 1; } else { $nOccurrence = count($this->TabLigne,COUNT_NORMAL); } return $nOccurrence; } function& GetCadrageVertical() { Erreur('ErreurProprieteInconnue','',Fc34ec142("PROP_NOM_CADRAGEVERTICAL"),F3b9ec4ca($this)); return RetourErreur_Entier; } function SetCadrageVertical($nCadrageVertical) { Erreur('ErreurProprieteInconnue','',Fc34ec142("PROP_NOM_CADRAGEVERTICAL"),F3b9ec4ca($this)); } function& GetCadrageHorizontal() { Erreur('ErreurProprieteInconnue','',Fc34ec142("PROP_NOM_CADRAGEHORIZONTAL"),F3b9ec4ca($this)); return RetourErreur_Entier; } function SetCadrageHorizontal($nCadrageHorizontal) { Erreur('ErreurProprieteInconnue','',Fc34ec142("PROP_NOM_CADRAGEHORIZONTAL"),F3b9ec4ca($this)); } function& GetBulle() { Erreur('ErreurProprieteInconnue','',Fc34ec142("PROP_NOM_BULLE"),F3b9ec4ca($this)); return RetourErreur_Entier; } function SetBulle($sBulle) { Erreur('ErreurProprieteInconnue','',Fc34ec142("PROP_NOM_BULLE"),F3b9ec4ca($this)); } function& GetLargeur() { $tmp = $this->m_nLargeur; return $tmp; } function SetLargeur($nLargeur) { Erreur('ErreurProprieteLectureSeule','',Fc34ec142("PROP_NOM_LARGEUR"),F3b9ec4ca($this)); } function& GetHauteur() { $tmp = $this->m_nHauteur; return $tmp; } function SetHauteur($nHauteur) { Erreur('ErreurProprieteLectureSeule','',Fc34ec142("PROP_NOM_HAUTEUR"),F3b9ec4ca($this)); } function& GetOpacite() { Erreur('ErreurProprieteInconnue','',Fc34ec142("PROP_NOM_OPACITE"),F3b9ec4ca($this)); return RetourErreur_Entier; } function SetOpacite($nOpacite) { Erreur('ErreurProprieteInconnue','',Fc34ec142("PROP_NOM_OPACITE"),F3b9ec4ca($this)); } function ListeDeplaceLigne($nIndexSource, $DestinationOuInc, $nType = null, $sFonctionOrigine = 'FCT_LISTEDEPLACELIGNE') { if ($nIndexSource == LIGNE_SELECTIONEE) { $nIndexSource = $this->Valeur; } if ($DestinationOuInc == TD_PAGEPRECEDENT) { $DestinationOuInc = $nIndexSource - $this->nMaxLignePage; } elseif ($DestinationOuInc == TD_PAGESUIVANT) { $DestinationOuInc = $nIndexSource + $this->nMaxLignePage; } return parent::ListeDeplaceLigne($nIndexSource,$DestinationOuInc,$nType,$sFonctionOrigine); } function ZoneRepeteeAjouteLigne() { if($this->F48dce54a()) { return null; } $arg=func_get_args(); $bOk = $this->F5eadf367($arg); if($bOk) { if(Feef890d7()) { F055fb2fe($this->GetNom(), $this); $this->Ff922bb0a(count($this->TabLigne,COUNT_NORMAL)); } } $this->Fbe50ddf6($this->GetOccurrence()); return $bOk; } function F5eadf367( $Ligne = '' ) { return parent::F5eadf367($this->Fd135d1c5($Ligne)); } function TableAjouteLigne() { $arg = func_get_args(); return call_user_func_array(array($this,'ZoneRepeteeAjouteLigne'),$arg); } function ListeAjoute($szElements = '') { parent::ListeAjoute((is_object($szElements) ? $szElements->TabValeur : $szElements)); if(Feef890d7()) { F055fb2fe($this->GetNom(), $this); $this->Ff922bb0a(count($this->TabLigne,COUNT_NORMAL)); } } function ListeInsere($ELEMENT, $Indice = -1) { return $this->ZoneRepeteeInsere($ELEMENT, $Indice); } function ZoneRepeteeInsereLigne() { if($this->F48dce54a()) { return null; } $nNbArg = func_num_args(); $nNumLigne = func_get_arg(0); $TabArg = array(); for ($i=0;$i<$nNbArg-1;$i++) { $TabArg[$i] = func_get_arg($i+1); } $nResultat = -1; if ($nNumLigne > $this->GetOccurrence()) { if($this->F5eadf367($TabArg)) { $nResultat = $this->GetOccurrence(); } } else { $nResultat = parent::ListeInsere($TabArg, $nNumLigne); } if($nResultat != -1) { if(Feef890d7()) { F055fb2fe($this->GetNom(), $this); $this->Ff922bb0a($nResultat); } } return $nResultat; } function TableInsereLigne() { return $this->ZoneRepeteeInsereLigne(); } function ZoneRepeteeAjoute( $szTabAttribut="" ) { if($this->F48dce54a()) { return false; } $arg= utf8_explode( "\t", $szTabAttribut ); $bOk = $this->F5eadf367($arg); if($bOk) { if(Feef890d7()) { F055fb2fe($this->GetNom(), $this); $this->Ff922bb0a(count($this->TabLigne,COUNT_NORMAL)); } } $this->Fbe50ddf6($this->GetOccurrence()); return $bOk; } function TableAjoute($szTabAttribut) { return $this->ZoneRepeteeAjoute($szTabAttribut); } function ZoneRepeteeInsere( $szTabAttribut = "", $nNumLigne = -1 ) { if($this->F48dce54a()) { return false; } $TabArg= utf8_explode( "\t", $szTabAttribut ); $nResultat = -1; if ($nNumLigne > $this->GetOccurrence()) { if($this->F5eadf367($TabArg)) { $nResultat = $this->GetOccurrence(); } } else { $nResultat = parent::ListeInsere($TabArg, $nNumLigne); } if($nResultat != -1) { if(Feef890d7()) { F055fb2fe($this->GetNom(), $this); $this->Ff922bb0a($nResultat); } } $this->Fbe50ddf6($nResultat); return ($nResultat != -1); } function TableInsere( $szTabAttribut, $nNumLigne = -1 ) { return $this->ZoneRepeteeInsere($szTabAttribut, $nNumLigne); } function ListeModifie($ELEMENT, $Indice = -1) { $nResultat = parent::ListeModifie($ELEMENT, $Indice); if($nResultat != -1) { if(Feef890d7()) { F055fb2fe($this->GetNom(), $this); $this->Ff922bb0a($nResultat); } } return $nResultat; } function TableModifieLigne() { if($this->F48dce54a()) { return false; } $nNbArg = func_num_args(); $nNumLigne = func_get_arg(0); $TabArg = array(); for ($i=0;$i<$nNbArg-1;$i++) { $TabArg[$i] = func_get_arg($i+1); } $nResultat = $this->ListeModifie($TabArg, $nNumLigne); $this->Fbe50ddf6($nResultat); return $nResultat; } function ZoneRepeteeModifie( $szTabAttribut, $nNumLigne=-1 ) { if($this->F48dce54a()) { return false; } $TabArg= utf8_explode( "\t", $szTabAttribut ); $nResultat = $this->ListeModifie($TabArg, $nNumLigne); $this->Fbe50ddf6($nResultat); return $nResultat; } function TableModifie( $szTabAttribut, $nNumLigne=-1 ) { return $this->ZoneRepeteeModifie( $szTabAttribut, $nNumLigne); } function ZoneRepeteeOccurrence($nTypeInfo = null) { if(!isset($nTypeInfo)) { { $nTypeInfo = TO_TOTAL; } } switch ($nTypeInfo) { case TO_AFFICHEE : return $this->GetLastIndex() - $this->nFirstIndex + 1; case TO_VISIBLE : return $this->F56a8269c(); case TO_TOTAL : return $this->F1ac18ca4(); case TO_COLONNE : return count($this->TabAttribut); default: return -1; } } function TableOccurrence($nTypeInfo = TO_TOTAL) { return $this->ZoneRepeteeOccurrence($nTypeInfo); } function ListeSupprimeTout() { parent::ListeSupprimeTout(); if(Feef890d7()) { F055fb2fe($this->GetNom(), $this); $this->F8723e249(-1); } } function ZoneRepeteeSupprimeTout() { if($this->F48dce54a()) { return false; } if(isset($this->Reglette)) { $Reglette =& $this->Reglette; $Reglette->FirstItem(); } $this->ListeSupprimeTout(); } function TableSupprimeTout() { return $this->ZoneRepeteeSupprimeTout(); } function ZoneRepeteeSupprime($Indice=-1) { if($this->F48dce54a()) { if ($Indice == -1) $Indice = $this->Valeur - $this->nFirstIndex; if ($Indice < 1) return; if ($Indice > $this->GetNbEnregAffiche()) return; $BorneMax = $this->GetLastIndex() + 1; $nIndexTabLigne = $Indice + $this->nFirstIndex; Fe4e65a90($this->nLastPosition, H_RP_CONSERVE); if($nIndexTabLigne == ($this->nLastIndex+1)) { if(isset($this->TabPosition[$nIndexTabLigne+1])) { $this->nLastPosition = $this->TabPosition[$nIndexTabLigne+1]; } else { $this->nLastPosition = -1; } } if(isset($this->TabPosition[$nIndexTabLigne])) { Fbd3b8aac($this->TabPosition[$nIndexTabLigne]); } for($i=$nIndexTabLigne;$i<$BorneMax;$i++) { $this->TabLigne[$i]->TabValeur = $this->TabLigne[$i+1]->TabValeur; $this->TabPosition[$i] = $this->TabPosition[$i+1]; } unset( $this->TabLigne[$BorneMax] ); unset( $this->TabPosition[$BorneMax] ); $this->FichierParcours->Fec3a1557($this->RubriqueParcours, $this->bParcoursAsc, $Indice - 1); $LastRubrique = &$this->FichierParcours->LastRubrique; $this->FichierParcours->LastRubrique = &$this->RubriqueParcours; if($this->FichierParcours->F8ca9a29d(0)) { $this->nNbTotalEnreg--; } $this->FichierParcours->LastRubrique = &$LastRubrique; $this->SetFirstIndex($this->nFirstIndex); if(Feef890d7()) { F055fb2fe($this->GetNom(), $this); $this->F8723e249($Indice); } } else { $this->ListeSupprime($Indice); } } function ListeSupprime($Indice=-1) { $nResultat = parent::ListeSupprime($Indice); if($nResultat != -1) { if(Feef890d7()) { F055fb2fe($this->GetNom(), $this); $this->F8723e249($nResultat); } } return $nResultat; } function TableSupprime($Indice=-1) { return $this->ZoneRepeteeSupprime($Indice); } function ZoneRepeteeCherche( $szNomAttribut, $szValeurRech, $bType=true, $nPosDebut = 1 ) { $Attribut = $this->F1f9cec38( $szNomAttribut ); if(!isset($Attribut)) { return -1; } $nNumAttribut = $Attribut->nIndiceAttribut; if($this->F48dce54a()) { $Fichier = &Fbad7a601($Attribut->sFichierBase); $Rubrique = &$Fichier->F133178d5($Attribut->sRubriqueBase); $nFlag = 0; if(!$bType) { $nFlag = H_GENERIQUE; } $bResult = $Fichier->F218e30b2($Rubrique, $szValeurRech, true, $nFlag); $Fichier->Fd90f4b71($Rubrique); if(isset($Rubrique->BufferParcours)) { unset($Rubrique->BufferParcours->DernierEnregLu); $Rubrique->BufferParcours->DernierEnregLu = null; } if(!$bResult || !$Fichier->bHTrouve) { return -1; } $nPosition = $Fichier->F7ce1a2b2($this->RubriqueParcours, $Fichier->EnregCourant, $this->bParcoursAsc); if(isset($this->Reglette)) { $Reglette = &$this->Reglette; $nItem = (int)ceil($nPosition / $this->F56a8269c()); $Reglette->F47301c2e($nItem); } return $nPosition; } $nPosFin = count($this->TabLigne,COUNT_NORMAL); for ( $i=$nPosDebut; $i <= $nPosFin; $i++) { $TabLigne = &$this->TabLigne[ $i ]->TabValeur; $szValeurAttribut = ''; if (isset( $TabLigne[$nNumAttribut])) $szValeurAttribut = $TabLigne[$nNumAttribut]; if($bType) { if (utf8_strtolower($szValeurRech) == utf8_strtolower($szValeurAttribut)) { return $i; } } else { if(utf8_strcasecmp(utf8_substr($szValeurAttribut, 0, utf8_strlen($szValeurRech)),$szValeurRech) == 0) { return $i; } } } return -1; } function TableCherche( $szNomAttribut, $szValeurRech, $bType=true, $nPosDebut = 1 ) { return $this->ZoneRepeteeCherche($szNomAttribut, $szValeurRech, $bType, $nPosDebut); } function ZoneRepeteeTrie ($szNomAttribut, $bInverse = false) { if ($szNomAttribut === false) { $this->m_bEstTrie = false; return true; } if ($szNomAttribut === '') $szNomAttribut = $this->TabAttribut[ key($this->TabAttribut) ]->Nom; if (!$this->F48dce54a()) { $bTmpSensCroissant = $this->m_bTriSens; $nTmpOptions = $this->m_nTriOptions; $bTmpEstTrie = $this->m_bEstTrie; $this->m_bTriSens = array(0=>0); $this->m_nTriOptions = array(0=>0); $tabNomAttribut = explode(TAB,$szNomAttribut); foreach ($tabNomAttribut as $szNomAttribut) { if ( ($szNomAttribut[0]==='+') || ($szNomAttribut[0]==='-') ) { $bInverse = ($szNomAttribut[0]==='-'); $szNomAttribut = utf8_substr($szNomAttribut,1); } $Attribut =& $this->F1f9cec38($szNomAttribut); if(!isset($Attribut)) { return false; } $this->m_bTriSens[] = !$bInverse; $this->m_nTriOptions[] = $Attribut->nIndiceAttribut; ++$this->m_bTriSens[0]; ++$this->m_nTriOptions[0]; } $temp = array_values($this->TabLigne); if(utf8_usort($temp, array(&$this, 'F0a6dd082' ))) { $this->TabLigne = array_values($temp); array_unshift($this->TabLigne,0); unset($this->TabLigne[0]); } $this->m_bTriSens = $bTmpSensCroissant; $this->m_nTriOptions = $nTmpOptions; $this->m_bEstTrie = $bTmpEstTrie; } else { if ( ($szNomAttribut[0]==='+') || ($szNomAttribut[0]==='-') ) { $bInverse = ($szNomAttribut[0]==='-'); $szNomAttribut = utf8_substr($szNomAttribut,1); } if ($this->Fe35a8a31($szNomAttribut, !$bInverse)) { } else { return false; } } $this->m_bEstTrie = true; if(Feef890d7()) { F055fb2fe($this->GetNom(), $this); $this->F8723e249($this->GetFirstIndex() + 1); } return true; } function F0a6dd082(&$pclLigne1,&$pclLigne2) { for($i=1; $i<=$this->m_nTriOptions[0]; ++$i) { $return = Fa4014e81($pclLigne1->TabValeur[$this->m_nTriOptions[$i]],$pclLigne2->TabValeur[$this->m_nTriOptions[$i]]); if ($return!==0) { if (!$this->m_bTriSens[$i]) return -$return; return $return; } } return 0; } function Fe35a8a31($szNomAttribut, $bAsc = true) { foreach ($this->TabAttribut as $Attribut) if (strcmp($Attribut->Nom , $szNomAttribut ) === 0 ) { $cSens = ($bAsc) ? '' : '-'; $this->SetRubriqueParcourue($cSens.$Attribut->sRubriqueBase); return true; } return false; } function TableTrie ($szNomAttribut, $bInverse) { return $this->ZoneRepeteeTrie($szNomAttribut, $bInverse); } function ListeAffiche($nPosition = TA_DEBUT) { $this->ZoneRepeteeAffiche($nPosition); } function TableAffiche($nPosition = TA_DEBUT) { $this->ZoneRepeteeAffiche($nPosition); } function ZoneRepeteeAffiche($nPosition = TA_DEBUT) { if($this->Feb0bfada($nPosition) && Feef890d7()) { F055fb2fe($this->GetNom(), $this); $this->F8723e249($this->GetFirstIndex() + 1); } } function ListeSelectPlus() { $selection = func_get_args(); if(!isset($selection) || empty($selection)) { return; } parent::ListeSelectPlus($selection[0]); if(isset($this->TabPosition[$this->nLastIndex + $this->GetValeur()])) { Fe4e65a90($this->TabPosition[$this->nLastIndex + $this->GetValeur()], H_RP_CONSERVE); } if(Feef890d7()) { F9402f437($this->GetNom(), $this); $this->F8723e249($this->GetFirstIndex() + 1); } } function TableSelectPlus() { $selection = func_get_args(); if(!isset($selection) || empty($selection)) { return; } parent::ListeSelectPlus($selection[0]); } function GetCouleurLigne($Indice,$bFormatHTML=true) { $IndiceWL = $Indice; if ($this->Fa2c5b186()) { } else { if (isset($this->m_pclIterateur) && ($this->m_pclIterateur->vnGetIndiceWL()==$Indice)) { if (!$this->m_bRepetitionVertical) { $Indice = $this->m_pclIterateur->m_nIndiceLigneVisible; } else { $nLigne = ceil( ($this->m_pclIterateur->m_nIndiceWLCurseur+1) / $this->m_pclIterateur->m_nNbColonnes ); $nColonne = (($nLigne-1)*$this->m_pclIterateur->m_nNbColonnes) + ($this->m_pclIterateur->m_nIndiceWLCurseur+1); $Indice = ( ($nColonne-1) * $this->m_pclIterateur->m_nNbLignes ) + $nLigne; } } else { $Indice = $this->F3337675a($Indice); } } if (isset($this->TabLigne[$IndiceWL]) && $this->TabLigne[$IndiceWL]->F2bd61426() && $this->TabLigne[$IndiceWL]->GetCouleurFond() !== -1) { $pclStyle =& $this->TabLigne[$IndiceWL]->StyleLigne; } else { if ($Indice%2 == 0) $pclStyle=&$this->StyleLignePaire; else $pclStyle=&$this->StyleLigneImpaire; } $sCouleur = $pclStyle->GetCouleurFond(); if($bFormatHTML) return $sCouleur; if ($sCouleur==-1) return -1; return F91b14b72(F63d91c07($pclStyle->GetCouleurFond())); } function& GetType() { return getRef($this->bLineaire ? TYPE_CHAMP_ZRLINEAIRE : TYPE_CHAMP_ZR); } function F4a917fa4() { return 11; } function F7b66f7f8() { return $this->nMaxLignePage; } function SetMaxLignePage($nNbLigne) { $this->nMaxLignePage = $nNbLigne; } function SetNbColonneParLigne($nNbColonne) { $this->nNbColonneParLigne = $nNbColonne; } function GetFirstIndex() { if ($this->F1ac18ca4() < $this->nFirstIndex) { if (isset($this->Reglette)) $this->Reglette->F9fd92c7d(); else $this->nFirstIndex = ($this->F1ac18ca4() - round($this->F1ac18ca4()/$this->F7b66f7f8(),0)); } return $this->nFirstIndex; } function SetFirstIndex($nIndex) { $this->nFirstIndex = $nIndex; if($this->F48dce54a()) { $bAvecPCodeFiltre = (ExecuteTraitement($this->m_sNomPHP,TRT_Filtre_Page,false,true)===true); $bAvecPCodeAffLigne = (ExecuteTraitement($this->m_sNomPHP,trtAffichageLigne,false,true)===true); if( $bAvecPCodeFiltre || (!isset($this->TabLigne[$nIndex + 1]) || !isset($this->TabLigne[$nIndex + 1 + $this->F56a8269c()]))) { if( $bAvecPCodeFiltre || ($this->nLastPosition == -1) ) { if(!empty($this->sValeurRecherche)) { $this->FichierParcours->Fd7f91600($this->RubriqueParcours, array($this->sValeurRecherche)); } $this->nNbTotalEnreg = $this->FichierParcours->F7f79f122(0, "", $this->RubriqueParcours, true); $this->FichierParcours->Fa84e48aa($this->RubriqueParcours, $this->bParcoursAsc, H_RESPECTE_FILTRE); if(!empty($this->sRubriqueMemorisee)) { $this->TabValeurMemorisee = array(); } $nNbEnregLu = 0; if ($bAvecPCodeFiltre) { while($this->FichierParcours->bHTrouve) { if ($this->Fb40d01a9($nIndex+$nNbEnregLu+1) != nFILTRE_OK) { --$this->nNbTotalEnreg; } $this->FichierParcours->Fec3a1557($this->RubriqueParcours, $this->bParcoursAsc); ++$nNbEnregLu; } $nNbEnregLu = 0; $this->FichierParcours->Fa84e48aa($this->RubriqueParcours, $this->bParcoursAsc, H_RESPECTE_FILTRE); } } else { Fe4e65a90($this->nLastPosition); if($nIndex > $this->nLastIndex) { $this->FichierParcours->Fec3a1557($this->RubriqueParcours, $this->bParcoursAsc, $nIndex - $this->nLastIndex); } else if($nIndex < $this->nLastIndex) { $this->FichierParcours->Fec3a1557($this->RubriqueParcours, !$this->bParcoursAsc, $this->nLastIndex - $nIndex); } } $nNbEnregLu = 0; if($this->FichierParcours->bHTrouve) { $this->nLastPosition = $this->FichierParcours->Fd172163b($this->RubriqueParcours); $this->nLastIndex = $this->nFirstIndex; } $nIndiceLigne = $nIndex; $nNbEnregUtilises = 0; $nNbEnregPrecedent = 0; if (isset($this->nLimiteChargementMemoire)) { $nMaxLignes = $this->nLimiteChargementMemoire; } elseif (isset($this->Reglette)) $nMaxLignes = $this->F56a8269c(); else $nMaxLignes = 0; while($this->FichierParcours->bHTrouve && ($nMaxLignes===0 || $nNbEnregUtilises < $nMaxLignes)) { $nResFiltre = $bAvecPCodeFiltre ? $this->Fb40d01a9($nIndex+$nNbEnregLu+1) : nFILTRE_OK; if ($nResFiltre == nFILTRE_FIN) { break; } elseif ($nResFiltre == nFILTRE_OK) { if ($bAvecPCodeFiltre && $nNbEnregPrecedent<$nIndex) { ++$nNbEnregPrecedent; } else { $Ligne = array(); foreach(array_keys($this->TabAttribut) as $sNom) { $Attribut =& $this->TabAttribut[$sNom]; if($Attribut->bAvecLiaison) { $Ligne[$Attribut->nIndiceAttribut] = $Attribut->F6a54070c($this->FichierParcours); } else { $Ligne[$Attribut->nIndiceAttribut] = null; } } if(isset($Ligne)) { $this->TabLigne[$nIndiceLigne + 1] = $this->Fd135d1c5($Ligne); $this->TabPosition[$nIndiceLigne + 1] = $this->FichierParcours->Fd172163b($this->RubriqueParcours); if ($bAvecPCodeAffLigne) $this->Fbe50ddf6($nIndiceLigne + 1); ++$nIndiceLigne; if(!empty($this->sRubriqueMemorisee)) { $this->TabValeurMemorisee[$nIndiceLigne] = $this->FichierParcours->EnregCourant[$this->sRubriqueMemorisee]; } ++$nNbEnregUtilises; } } } if ($nMaxLignes == 0 || $nNbEnregUtilises < $nMaxLignes) { $this->FichierParcours->Fec3a1557($this->RubriqueParcours, $this->bParcoursAsc); ++$nNbEnregLu; } } $this->Occurrence = $this->GetOccurrence(); if (isset($this->nLimiteChargementMemoire)&&($nMaxLignes>0)) { $this->nNbTotalEnreg = min($nMaxLignes,$nNbEnregUtilises); } } if(isset($this->TabPosition[$nIndex + 1])) { Fe4e65a90($this->TabPosition[$nIndex + 1], H_RP_CONSERVE); } } } function GetLastIndex() { if($this->nMaxLignePage == 0) { return $this->F1ac18ca4() - 1; } $nMin = min($this->F1ac18ca4(), $this->nFirstIndex + $this->F56a8269c()); return $nMin - 1; } function F56a8269c() { return $this->nMaxLignePage * $this->nNbColonneParLigne; } function SetSourceRemplissage($sFichierParcours, $sRubriqueParcours, $sRubriqueAffichee, $sRubriqueMemorisee, $bParcoursAsc, $sValeurRecherche, $nNbMaxLigne) { $this->FichierParcours = &Fbad7a601($sFichierParcours); if(!empty($sRubriqueParcours)) { $this->RubriqueParcours = $sRubriqueParcours; } $this->sRubriqueMemorisee = $sRubriqueMemorisee; $this->bParcoursAsc = $bParcoursAsc; $this->sValeurRecherche = $sValeurRecherche; } function InitRemplissage() { if (false === $this->F7f821e68()) return; $this->SetFirstIndex(0); $this->bInitRemplissage = true; } function F1ac18ca4() { if($this->nNbTotalEnreg > -1) { return $this->nNbTotalEnreg; } return count($this->TabLigne,COUNT_NORMAL); } function GetNbEnregAffiche() { if($this->nMaxLignePage == 0) { return $this->F1ac18ca4(); } return min($this->F56a8269c(), $this->F1ac18ca4() - $this->nFirstIndex); } function& GetValeur() { if(!empty($this->sRubriqueMemorisee) && isset($this->TabValeurMemorisee) && array_key_exists($this->Valeur,$this->TabValeurMemorisee)) { $nRetour = $this->TabValeurMemorisee[$this->Valeur]; } else { $nRetour = $this->F63ff45c7(); } return $nRetour; } function SetValII( $nLigne, $nColonne, $sValeur ) { if($this->F48dce54a()) { if ($nLigne == -1) $nLigne = $this->Valeur; else $nLigne += $this->nFirstIndex; } if (is_string($nColonne)) { $this->F7d306d49($nColonne, $nLigne, $sValeur); return; } $sNomAttribut = null; foreach(array_keys($this->TabAttribut) as $sNom) { if ($this->TabAttribut[$sNom]->nIndiceAttribut == $nColonne - 1) { $sNomAttribut = $sNom; break; } } if (isset($sNomAttribut)) { $this->F7d306d49($sNomAttribut, $nLigne, $sValeur); } } function F4bdd5276($Indice,$nIndiceVisible) { $sResultat = ''; $sResultat .= '<DEBUT/>'; $sResultat .= '<CORPS><![CDATA['; $sResultat .= call_user_func_array('construireLigneZR_'.$this->F960e3ffe(), array(&$this, $Indice, &$nIndiceVisible)); $sResultat .= ']]></CORPS>'; $sResultat .= '<FIN/>'; if (function_exists(($sNomFonctionStyle = 'construireStyleZR_'.$this->F960e3ffe())) && ''!==($sStyleLigne=(call_user_func_array($sNomFonctionStyle,array(&$this, $Indice, &$nIndiceVisible))))) { $sResultat .= '<STYLE><![CDATA[' . $sStyleLigne . ']]></STYLE>'; $this->m_sStyle = ' STYLE="1"'; } return $sResultat; } function F7b5c0e7a() { $sResultat = "<SELECTIONS>"; if($this->Valeur >= 1) { $sResultat .= ($this->Valeur!=-1) ? FMK_ChaineConstruit("<SELECTION>%1</SELECTION>", ($this->Valeur-1)) : ''; } $sResultat .= "</SELECTIONS>"; return $sResultat; } function ZoneRepeteeEnrouleDeroule($nNumLigne = -1, $piRupture = null) { $this->Fc87f5252($nNumLigne, (($piRupture!==null) ? F9abbf335($piRupture,IND_CHAMP): null)); } function Fc87f5252($nNumLigne,$piRupture) { $nNumLigneC = 0; if ($nNumLigne==-1) { $nNumLigneC = $this->F63ff45c7() - 1; } else { $nNumLigneC = $nNumLigne - 1; } $nIndiceRupture=0; if ($piRupture !== null) { $nIndiceRupture = $this->F342a28c1($piRupture); if ($nIndiceRupture === -1) { Fb9eb0792('ERR_RUPTURENONTROUVEE', $piRupture->Fd464306b(), $this->Fd464306b() ); } } else { if (0 < $this->Fdf310505()) { $nIndiceRupture = 0; } else { Fb9eb0792('ERR_RUPTURENONTROUVEE', Fd7624002(""), $this->Fd464306b() ); $nIndiceRupture = -1; } } if (-1 !== $nIndiceRupture) { $this->Fc018951f($nNumLigneC, $nIndiceRupture); if(Feef890d7()) { F055fb2fe($this->GetNom(), $this); $this->F8723e249($nNumLigneC+1); } } } } class CZoneRepeteeNavigateur extends CZoneRepetee { function CZoneRepeteeNavigateur() { parent::CZoneRepetee(); $this->m_bEstNavigateur = true; } } function ZoneRepeteeTrie ($szTri) { global $MaPage; $szNomAttribut = $szTri; $cChar1 = utf8_substr($szTri, 0, 1); $bInverse = false; if ($cChar1 == '-') { $bInverse = true; $szNomAttribut = utf8_substr($szTri, 1); } elseif ($cChar1 == '+') { $szNomAttribut = utf8_substr($szTri, 1); } $sNomPremierAtt = $szNomAttribut; $nPosFinPremierAttribut = utf8_strpos($szNomAttribut,TAB); if ($nPosFinPremierAttribut>0) $sNomPremierAtt = utf8_substr($szNomAttribut,0,$nPosFinPremierAttribut); $szNomZone = &$MaPage->Ffc024b6b($sNomPremierAtt); if (!isset($szNomZone)) { $clVM =& obtenirVM(); $szNomZone = $clVM->F67af5b5c($sNomPremierAtt); if (!isset($szNomZone)) { Erreur('ErreurWL_1_Param',"ErreurAttributZRInvalide", $sNomPremierAtt, Fc34ec142("FCT_ZR_TRIE")); return false; } return $GLOBALS[$szNomZone]->ZoneRepeteeTrie('',$bInverse); } else { return $GLOBALS[$szNomZone]->ZoneRepeteeTrie($szNomAttribut, $bInverse); } } ?>