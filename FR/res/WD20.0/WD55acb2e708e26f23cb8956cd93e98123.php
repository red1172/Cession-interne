<?php
//20.0.56.0 FMK/Chaine.php GF 
//VersionVI: 30F200066p
//(c) 2005-2012 PC SOFT  - Release
 define('FMK_Chaine',true); if (!defined('__INC__FMK/Compat/xsystem.php')) { define('__INC__FMK/Compat/xsystem.php',true); include_once(WB_INCLUDE_PATH.'WD14183cc5dbbd843da831afdd3bf106e4.php'); } function& Ff02acf44(&$pclVarDyn,$vIndice) { if (is_array($pclVarDyn)) $pclRetour =& $pclVarDyn[$vIndice]; else $pclRetour = utf8_substr($pclVarDyn,$vIndice,1); return $pclRetour; } function F35bdb297(&$pclVarDyn,$vIndice) { if (is_array($pclVarDyn)) return array_key_exists($vIndice,$pclVarDyn); return $vIndice>=0 && $vIndice<utf8_strlen($pclVarDyn); } define("TAB" , "\t", true); define("EOT" , chr(4), true); define("FinLigne" , "\n", true); define("RC" , "\r" . FinLigne, true); define("ccNormal" , 0 , true); define("ccSansEspace" , 1 , true); define("ccSansPonctuationNiEspace" , 2 , true); define("ccSansAccent" , 4 , true); define("ccOrdreLexicographique" , 8 , true); define("ccSansCasse" , 16 , true); define("ccMajuscule" , 32 , true); define("ccMinuscule" , 64 , true); define("ccRespecteNumerique" , 128 , true); define("nTRI_SANSFONCTIONGRAPH" , 0x01000000 , true); define('triTableDéfaut' , ccSansAccent+ccSansCasse); define('triDéfaut' , -1 , true); define("DepuisDebut" ,0,false); define("DepuisFin" ,1,true); define("MotComplet" ,2,true); define("SansCasse" ,4, true); define("BaseChaineOctal","o",true); define("BaseChaineDecimal","d",true); define("BaseChaineHexadecimal","x",true); define("BaseChaineDefaut",BaseChaineDecimal,true); define("BaseNumeriqueOctal",8,true); define("BaseNumeriqueDecimal",10,true); define("BaseNumeriqueHexadecimal",16,true); define("BaseNumeriqueDefaut",BaseNumeriqueDecimal,true); define("rangPremier", ((int)0x80000000), true); define("rangSuivant", ((int)0x80000001), true); define("rangPrécédent", ((int)0x80000002), true); define("rangDernier", ((int)0x80000003), true); define("SepSysVar","=",true); define("LimiteExpReg","/",true); define("LimiteMotExpReg","\b",true); class FMK_Chaine { var $TabConvAccent; var $TabPonctEspace; var $RangPositionOccurrenceSuivant; var $RangPositionOccurrencePrécédent; var $RangExtraitChaineSuivant; var $RangExtraitChainePrécédent; var $nLongueurMatchPosition; function FMK_Chaine() { $this->TabConvAccent = null; $this->TabPonctEspace = null; $this->RangPositionOccurrenceSuivant = 2; $this->RangPositionOccurrencePrecedent = 2; $this->RangExtraitChaineSuivant = 2; $this->RangExtraitChainePrecedent = 2; $this->nLongueurMatchPosition = 0; } } $_FMK_Chaine = new FMK_Chaine(); function FMK_ChaineConstruit($Format) { $NbArg = func_num_args(); $Arg = func_get_args(); $Format = utf8_str_replace('%%','%',$Format); for ($i=1; $i<$NbArg; $i++) { $Arg[$i] = utf8_str_replace('%','__WB__POURCENT__',$Arg[$i] ); } $GLOBALS['__ChaineConstruit__'] = $Arg; $Retour = preg_replace_callback( "/\%\d+/" . UNICODE_REGEXP, create_function( '$matches', 'return (isset($GLOBALS["__ChaineConstruit__"][utf8_substr($matches[0],1)])) ? $GLOBALS["__ChaineConstruit__"][utf8_substr($matches[0],1)] : "";' ), $Format ); unset($GLOBALS['__ChaineConstruit__']); return utf8_str_replace('__WB__POURCENT__','%',$Retour ); } function F1cd18e7d($Chaine) { return utf8_trim($Chaine) == ""; } function F0728da76($Chaine,$Fin) { return strcmp(F8e3171da($Chaine,utf8_strlen((string)$Fin)), $Fin) === 0; } function F8e3171da($Chaine, $Longueur = null) { if ($Longueur<0) return EOT; if (!isset($Longueur)) return utf8_ltrim($Chaine); if ($Longueur == 0) return ""; if ($Longueur>utf8_strlen($Chaine)) return $Chaine; return utf8_substr($Chaine, -($Longueur)); } function F61bc61eb($Chaine,$Début) { return Fb6596e39($Chaine,utf8_strlen($Début)) == $Début; } function Fb6596e39($Chaine, $Longueur = null) { if ($Longueur<0) return EOT; if (!isset($Longueur)) return utf8_rtrim($Chaine); if ($Longueur == 0) return ""; if ($Longueur>utf8_strlen($Chaine)) return $Chaine; return utf8_substr($Chaine, 0, $Longueur); } function FMK_Position($Chaine, $Recherche, $Debut = 1, $Option = DepuisDebut) { global $_FMK_Chaine; $_FMK_Chaine->nLongueurMatchPosition = 0; $nTailleChaine = utf8_strlen($Chaine); if ($Debut > $nTailleChaine) return 0; if (is_array($Recherche)) { if (count($Recherche,COUNT_NORMAL)===0) return 0; $tabRecherches = array_flip($Recherche); } else { if ($Recherche == '') return 0; $tabRecherches = array($Recherche=>$nTailleChaine); } $ChaineFormat = $Chaine; if (Fdef56c7f($Option , SansCasse)) { $Chaine = utf8_strtolower($Chaine); $ChaineFormat = F03771b65($Chaine); $tabRecherches = utf8_array_change_key_case($tabRecherches,CASE_LOWER); } if ($Debut == 0) $Debut = ($Option & DepuisFin) ? $nTailleChaine : 1; $Res = false; $bAuMoinsUnTrouve = false; $nIndiceMatch = 0; foreach (array_keys($tabRecherches) as $nIndiceMatch => $sRecherche) { $DebutRech = ($Option & DepuisFin) ? 0 : $Debut - 1; if ($sRecherche==='') continue; if (Fdef56c7f($Option , SansCasse)) $sRecherche = F03771b65($sRecherche); while ((($Res = ($DebutRech = utf8_strpos($ChaineFormat,(string)$sRecherche,max($DebutRech,0)))) !== false) && ((!($Option & DepuisFin)) || ($DebutRech < $Debut))) { if ( (F5f7235e7($Option , MotComplet)) || ( (($DebutRech == 0) || array_key_exists(utf8_substr($Chaine,$DebutRech - 1,1),F0e995e47())) && (($DebutRech == ($nTailleChaine - utf8_strlen($sRecherche))) || array_key_exists(utf8_substr($Chaine,$DebutRech + utf8_strlen($sRecherche),1),F0e995e47())) ) ) { $Res = $DebutRech; $bAuMoinsUnTrouve = true; $tabRecherches[$sRecherche] = ($Res!==false) ? $Res : ((F5f7235e7($Option , DepuisFin)) ? $nTailleChaine : -1); if (F5f7235e7($Option , DepuisFin)) break; } ++$DebutRech; } } if (!$bAuMoinsUnTrouve) { return 0; } if (count($tabRecherches,COUNT_NORMAL)===1) { reset($tabRecherches); $sRechercheTrouvee = key($tabRecherches); $Res = current($tabRecherches); } else { if (F5f7235e7($Option , DepuisFin)) { utf8_asort($tabRecherches,SORT_REGULAR); } else { utf8_arsort($tabRecherches,SORT_REGULAR); } reset($tabRecherches); $Res = current($tabRecherches); $sRechercheTrouvee = key($tabRecherches); $nLongueurRech = utf8_strlen($sRechercheTrouvee); while(next($tabRecherches) === $Res) { $nLongueurNouvelleRech = utf8_strlen(key($tabRecherches)); if ($nLongueurRech < $nLongueurNouvelleRech) { $nLongueurRech = $nLongueurNouvelleRech; $Res = current($tabRecherches); $sRechercheTrouvee = key($tabRecherches); } } } unset($tabRecherches); $_FMK_Chaine->nLongueurMatchPosition = utf8_strlen($sRechercheTrouvee); return $Res + (($Res === false) ? 0 : 1); } function F3449a00a($Chaine, $Debut, $Longueur = null) { return (($Debut < 0) || ($Longueur < 0)) ? EOT : utf8_substr($Chaine, max($Debut - 1,0), ($Longueur === null) ? utf8_strlen($Chaine) : $Longueur); } function Fda9fdf77($Chaine1, $Chaine2, $Option = ccNormal) { if ($Option & (ccSansEspace | ccSansPonctuationNiEspace | ccSansAccent)) { $Chaine1 = Fcb2d4de8($Chaine1,$Option); $Chaine2 = Fcb2d4de8($Chaine2,$Option); } if ($Option & ccRespecteNumerique) { $nOrdreNum = Fe556daf7($Chaine1,$Chaine2); if ($nOrdreNum!=0) return $nOrdreNum; } return ($Option & ccSansCasse) ? utf8_strcasecmp($Chaine1,$Chaine2) : strcmp($Chaine1,$Chaine2); } function Fcb2d4de8($Chaine, $Option = ccNormal) { if ($Option & ccSansEspace) $Chaine = utf8_trim($Chaine); if ($Option & ccSansPonctuationNiEspace) $Chaine = utf8_strtr($Chaine,F0e995e47()); if ($Option & ccSansAccent) $Chaine = UNICODE_PAGE_UTF8 ? Fbadd3589($Chaine) : utf8_strtr($Chaine,F4c3343c7()); if ($Option & ccMajuscule) $Chaine = utf8_strtoupper($Chaine); if ($Option & ccMinuscule) $Chaine = utf8_strtolower($Chaine); return $Chaine; } function F74ae1356($Recherche, $Option = DepuisDebut) { $LimiteMot = ($Option & MotComplet) ? LimiteMotExpReg : ""; if (is_array($Recherche)) { $sRechercheFinal = ''; foreach ($Recherche as $sMot) { if ($sRechercheFinal !== '') { $sRechercheFinal .= ')|'; } $sRechercheFinal .= '('.F261fdff8($sMot,$LimiteMot); } $sRechercheFinal .= ')'; } else { $sRechercheFinal = F261fdff8($Recherche,$LimiteMot); } return LimiteExpReg . $sRechercheFinal . LimiteExpReg . UNICODE_REGEXP . (($Option & SansCasse) ? "i" : ""); } function F261fdff8($Recherche, $LimiteMot = '') { return $LimiteMot . preg_quote($Recherche,LimiteExpReg) . $LimiteMot; } function Fe556daf7($sValeur1, $sValeur2) { $tabPartieAvantNombreValeur1 = utf8_explode(RC,preg_replace('/[0-9]/',RC,$sValeur1)); $tabPartieAvantNombreValeur2 = utf8_explode(RC,preg_replace('/[0-9]/',RC,$sValeur2)); if ($tabPartieAvantNombreValeur1[0] == $tabPartieAvantNombreValeur2[0]) { $nPos1 = 0; $nLongueurDebutChar1 = utf8_strlen($tabPartieAvantNombreValeur1[0]); if (is_numeric($sValeur1)) $nPos1 = utf8_strlen($sValeur1); else { for ($i=$nLongueurDebutChar1; $i<utf8_strlen($sValeur1); $i++) { $nPos1 = $i; if (!is_numeric(utf8_substr($sValeur1,$i,1))) {break;} } } $nPos2 = 0; $nLongueurDebutChar2 = utf8_strlen($tabPartieAvantNombreValeur2[0]); if (is_numeric($sValeur2)) $nPos2 = utf8_strlen($sValeur2); else { for ($i=$nLongueurDebutChar2; $i<utf8_strlen($sValeur2); $i++) { $nPos2 = $i; if (!is_numeric(utf8_substr($sValeur2,$i,1))) {break;} } } $nValeur1 = utf8_substr($sValeur1,$nLongueurDebutChar1,$nPos1-$nLongueurDebutChar1); $nValeur2 = utf8_substr($sValeur2,$nLongueurDebutChar2,$nPos2-$nLongueurDebutChar2); } else return 0; if ($nValeur1 == $nValeur2) { $sResteValeur1 = utf8_substr($sValeur1,$nPos1); $sResteValeur2 = utf8_substr($sValeur2,$nPos2); if ( (preg_replace('/[0-9]/','',$sResteValeur1) != $sResteValeur1) && (preg_replace('/[0-9]/','',$sResteValeur1) != $sResteValeur1) ) { return Fe556daf7($sResteValeur1,$sResteValeur2); } return 0; } return ($nValeur1 > $nValeur2) ? 1 : -1; } function F4c3343c7() { global $_FMK_Chaine; if (!isset($_FMK_Chaine->TabConvAccent)) $_FMK_Chaine->TabConvAccent = array("\x9e" => "z","\x80" => "C","\x81" => "U","\x82" => "e","\x83" => "a","\x84" => "a","\x85" => "a","\x86" => "a","\x87" => "c","\x88" => "e","\x89" => "e","\x8a" => "S","\x8b" => "i","\x8c" => "i","\x8d" => "i","\x8e" => "A","\x8f" => "A","\x90" => "e","\x93" => "o","\x94" => "o","\x95" => "o","\x96" => "u","\x97" => "u","\x98" => "y","\x99" => "O","\x9a" => "s","\x9f" => "Y","\xa0" => "a","\xa1" => "i","\xa2" => "o","\xa3" => "u","\xa4" => "n","\xa5" => "N","\xc0" => "A","\xc1" => "A","\xc2" => "A","\xc3" => "A","\xc4" => "A","\xc5" => "A","\xc7" => "C","\xc8" => "E","\xc9" => "E","\xca" => "E","\xcb" => "E","\xcc" => "I","\xcd" => "I","\xce" => "I","\xcf" => "I","\xd0" => "D","\xd1" => "N","\xd2" => "O","\xd3" => "O","\xd4" => "O","\xd5" => "O","\xd6" => "O","\xd7" => "X","\xd8" => "O","\xd9" => "U","\xda" => "U","\xdb" => "U","\xdc" => "U","\xdd" => "Y","\xe0" => "a","\xe1" => "a","\xe2" => "a","\xe3" => "a","\xe4" => "a","\xe5" => "a","\xe7" => "c","\xe8" => "e","\xe9" => "e","\xea" => "e","\xeb" => "e","\xec" => "i","\xed" => "i","\xee" => "i","\xef" => "i","\xf1" => "n","\xf2" => "o","\xf3" => "o","\xf4" => "o","\xf5" => "o","\xf6" => "o","\xf8" => "o","\xf9" => "u","\xfa" => "u","\xfb" => "u","\xfc" => "u","\xfd" => "y","\xff" => "y"); return $_FMK_Chaine->TabConvAccent; } function F0e995e47() { global $_FMK_Chaine; $TabPonctEspace =& $_FMK_Chaine->TabPonctEspace; if (!isset($_FMK_Chaine->TabPonctEspace)) { for ($i = 0; $i < 256; $i++) { if (($i < 48) || (($i > 57) && ($i < 64)) || (($i > 90) && ($i < 97)) || (($i > 122) && ($i < 128)) || (($i > 165) && ($i < 192)) || ($i == 247)) { $TabPonctEspace[utf8_chr($i)] = ""; } } } return $TabPonctEspace; } function F05ad8ed4($Chaine, $Indice, $Separateur = TAB, $Depuis = DepuisDebut) { $TabPartie = Fb05a9221($Chaine, $Separateur , $Depuis ); $NbElem = count($TabPartie,COUNT_NORMAL); global $_FMK_Chaine; $Indice = F72f0e110($Indice,$_FMK_Chaine->RangExtraitChaineSuivant,$_FMK_Chaine->RangExtraitChainePrecedent,$Depuis); if (($Indice > $NbElem) or ($Indice < 1)) return EOT; return $TabPartie[($Indice - 1)]; } function Fb05a9221($Chaine, $Separateur = TAB, $Depuis = DepuisDebut) { if ($Chaine==='') return array(''); if (is_array($Separateur)) { if ((count($Separateur,COUNT_NORMAL)===0) || in_array('',$Separateur)) return array($Chaine); if ( in_array("\n",$Separateur)&&!in_array("\r\n",$Separateur)&&(utf8_strpos($Chaine,"\r\n")!==false) ) $Separateur[] = "\r\n"; if (in_array("\r\n",$Separateur)&&!in_array("\n",$Separateur)&&(($nPosN=utf8_strpos($Chaine,"\r\n"))!==false)&&isset($Chaine[$nPosN-1])&&($Chaine[$nPosN-1]==="\r")) $Separateur[] = "\n"; $TabPartie = (count($Separateur,COUNT_NORMAL)===1) ? utf8_explode($Separateur[0], $Chaine) : preg_split(F74ae1356($Separateur,$Depuis),$Chaine); } else { if ($Separateur === '') return array($Chaine); if ( utf8_strpos($Separateur,"\n")!==false ) return Fb05a9221($Chaine, array($Separateur), $Depuis); $TabPartie = utf8_explode($Separateur, $Chaine); } if ($Depuis & DepuisFin) $TabPartie = array_reverse($TabPartie); return $TabPartie; } function F72f0e110($Occurrence, &$Suivant, &$Précédent, &$Option) { switch ($Occurrence) { case rangPremier: $Suivant = 1; case rangSuivant: $Option &= (~DepuisFin); $Occurrence = $Suivant; ++$Suivant; break; case rangDernier: $Précédent = 1; case rangPrécédent: $Option |= DepuisFin; $Occurrence = $Précédent++; break; default: break; } return $Occurrence; } function F1e689842($Chaine, $Recherche, $Occurrence, $Option = DepuisDebut) { global $_FMK_Chaine; $Occurrence = F72f0e110($Occurrence,$_FMK_Chaine->RangPositionOccurrenceSuivant, $_FMK_Chaine->RangPositionOccurrencePrecedent,$Option); $nPositionDebutRecherche = 0; $nPositionTrouvee = 0; $tabPositionsTrouvees = array(); for ($i = 0; $i < $Occurrence; ++$i) { $nPositionTrouvee = FMK_Position($Chaine,$Recherche,$nPositionDebutRecherche,$Option); if (in_array($nPositionTrouvee,$tabPositionsTrouvees)) return 0; $tabPositionsTrouvees[] = $nPositionTrouvee; $nPositionDebutRecherche = $nPositionTrouvee; $nPositionDebutRecherche += ($Option & DepuisFin) ? (-1) : 1; if ($nPositionTrouvee == 0) return 0; } return $nPositionTrouvee; } function F03771b65($Chaine) { return Fcb2d4de8($Chaine,ccSansAccent); } function Fd06ac608($Chaîne, $Taille, $Complétion=" ") { if ($Taille < utf8_strlen($Chaîne)) return utf8_substr($Chaîne,0,max(0,$Taille)); else return utf8_str_pad($Chaîne,$Taille,$Complétion); } function Fd1fcabe5($sChaine1, $sChaine2, $sOptions = 0) { $nResultat = 0; $bDepuisDebut = true; $bDepuisFin = false; $bMotComplet = false; $bSansCasse = false; $nOptions = intval($sOptions); switch ($nOptions) { case DepuisDebut : break; case DepuisFin : $bDepuisFin = true; $bDepuisDebut = false; break; case MotComplet : $bMotComplet = true; break; case SansCasse : $bSansCasse = true; break; default : if ($nOptions & SansCasse) $bSansCasse = true; if ($nOptions & MotComplet) $bMotComplet = true; if ($nOptions & DepuisFin) { $bDepuisFin = true; $bDepuisDebut = false; } } $nLongueurChaine1 = utf8_strlen($sChaine1); $nLongueurChaine2 = utf8_strlen($sChaine2); if ( ($nLongueurChaine1 == 0) || ($nLongueurChaine2 == 0) ){ return 0; } else if ($sChaine1 === $sChaine2) { $nResultat = $nLongueurChaine1; } else { if ($bDepuisDebut) { $nIndice_de_chaine1 = 0; $nBorne_de_chaine1 = $nLongueurChaine1; $nIndice_de_chaine2 = 0; $nBorne_de_chaine2 = $nLongueurChaine2; } else { $nIndice_de_chaine1 = $nLongueurChaine1-1; $nBorne_de_chaine1 = -1; $nIndice_de_chaine2 = $nLongueurChaine2-1; $nBorne_de_chaine2 = -1; } if ($bSansCasse) { $sChaine1 = Fcb2d4de8($sChaine1, ccMinuscule + ccSansAccent); $sChaine2 = Fcb2d4de8($sChaine2, ccMinuscule + ccSansAccent); } $bDifferenceRencontree = false; $nPositionDernierSeparateur = ($bDepuisDebut) ? 0 : $nLongueurChaine1-1; $sCaracterePrecedent = ''; while ( ($nIndice_de_chaine1 != $nBorne_de_chaine1) && ($nIndice_de_chaine2 != $nBorne_de_chaine2) && (!$bDifferenceRencontree) ) { if ( utf8_substr($sChaine1, $nIndice_de_chaine1,1 ) == utf8_substr($sChaine2, $nIndice_de_chaine2,1 ) ) { ++$nResultat; if ($bMotComplet) { if (F108871b4(utf8_substr($sChaine1, $nIndice_de_chaine1,1 ))) { if ( ($sCaracterePrecedent=='') || (!F108871b4($sCaracterePrecedent))) $nPositionDernierSeparateur = $nIndice_de_chaine1; } } $sCaracterePrecedent = utf8_substr($sChaine1,$nIndice_de_chaine1,1); if ($bDepuisDebut) { ++$nIndice_de_chaine1; ++$nIndice_de_chaine2; } else { --$nIndice_de_chaine1; --$nIndice_de_chaine2; } } else { $bDifferenceRencontree = true; } } if ($bMotComplet) { if ($bDepuisDebut) { if ((!$bDifferenceRencontree) && (($nIndice_de_chaine1 == $nBorne_de_chaine1) || ($nIndice_de_chaine1 == $nBorne_de_chaine2))) { $nResultat = $nIndice_de_chaine1; } else { $nResultat = $nPositionDernierSeparateur; } } else { if ((!$bDifferenceRencontree) && (($nIndice_de_chaine1 == $nBorne_de_chaine1) || ($nIndice_de_chaine1 == $nBorne_de_chaine2))) { $nResultat = ($nLongueurChaine1<$nLongueurChaine2) ? $nLongueurChaine1 : $nLongueurChaine2; } else { $nResultat = $nResultat-($nPositionDernierSeparateur-$nIndice_de_chaine1) ; } } if (($nPositionDernierSeparateur>0) && (F108871b4($sCaracterePrecedent))) $nResultat -= ($nResultat==0) ? 0 : 1; if ($nResultat==1){ if (F108871b4($sCaracterePrecedent)) $nResultat = 0; } } } return $nResultat; } function F0bbea4d4($Nombre, $Format = "") { if ($Format == "") { return (string)$Nombre; } if (($bSepMillier=F0728da76(utf8_strtolower($Format),'s'))===true) { $Format = substr($Format,0,strlen($Format)-1); } $Format = utf8_strtr($Format,array(','=>'.')); $sChaineSPrintf = utf8_sprintf("%" . $Format,$Nombre); if (utf8_strpos((string)$Nombre,',')) { $sChaineSPrintf = utf8_strtr($sChaineSPrintf,array('.'=>',')); } if ($bSepMillier) { global $_gszSEPDEC, $_gszSEPMIL; $nNbDecimaux = 0; if (($nPos = strpos($Format,'.'))!==false) { $nNbDecimaux = intval(substr($Format,$nPos+1)); } $sChaineSPrintf = utf8_number_format($Nombre,$nNbDecimaux,',',$_gszSEPMIL); } return $sChaineSPrintf; } function F828b8ca2( $Source, $bConvertionEspaceVersPlus = false ) { $dest = ($Source===false) ? '0' : rawurlencode($Source); $dest = utf8_strtr( $dest, array('%2A'=>'*', '%3A'=>':', '%2F'=>'/', '%3F'=>'?', '%3D'=>'=', '%26'=>'&') ); if ($bConvertionEspaceVersPlus) $dest = utf8_str_replace( '%20', '+', $dest ); return $dest; } function Fcab655af( $Source, $bConvertionPlusVersEspace=false ) { if (!is_scalar($Source)) return $Source; $Source = (string)$Source; if ($bConvertionPlusVersEspace) $Source = utf8_str_replace( '+', ' ', $Source ); $dest = rawurldecode($Source); return $dest; } function F22b3b1f6( $s ) { return utf8_str_replace("\r"," ",utf8_str_replace("\n"," ",utf8_str_replace(RC," ",$s))); } function F59286b53(&$sChaineDest, $nTaille, $sChaineSource) { $sChaineDest = utf8_str_pad(utf8_substr($sChaineSource,0,$nTaille-1),$nTaille-1,"\0"); } function F4fc787d9($Mixed) { return utf8_strlen($Mixed); } function F0bb2840c($Mixed) { if (!isset($Mixed)) return 0; if (is_string($Mixed)) { return utf8_strlen($Mixed) + 1 ; } if (is_array($Mixed)) { return count($Mixed,COUNT_NORMAL); } return false; } function Fc3c777b7() { $args=func_get_args(); return call_user_func_array('sprintf',$args); } function Fe6a95d94($sNom) { $taille = utf8_strlen($sNom); for($i=0; $i<$taille; $i++) { $sNom = utf8_substr_replace($sNom, (F62e1ca36(utf8_substr($sNom,$i,1),($i==0))) ? utf8_substr($sNom,$i,1): '_' ,$i , 1); } return $sNom; } function F56651974($sNom) { $sNom = Fe6a95d94('_' . $sNom); return utf8_substr($sNom,1); } function F62e1ca36($byCat, $bPremier = false) { if (($byCat == '_') || (($byCat >= 'A') && ($byCat <= 'Z')) || (($byCat >= 'a') && ($byCat <= 'z')) || ((utf8_ord($byCat) > 191) && (utf8_ord($byCat) != 215) && (utf8_ord($byCat) != 247))) return true; if ($bPremier) return false; if (($byCat == '-') || ($byCat == '.') || (($byCat >= '0') && ($byCat <= '9'))) return true; return false; } function F159221ea($sChaine,&$bPossedeGLien,&$bPossedeGARecuperer,&$sValeurMemorisee,&$sValeurAffichee) { $sValeurMemorisee = ''; $sValeurAffichee = ''; $bPossedeGARecuperer = false; $bPossedeGLien = false; if ((($nPosEsc=utf8_strpos($sChaine,utf8_chr(27))) === false) || !F35bdb297($sChaine,$nPosEsc+1)) { $sValeurMemorisee = $sChaine; $sValeurAffichee = $sChaine; return true; } switch (utf8_substr($sChaine,$nPosEsc+1,1)) { case 'V': $bPossedeGARecuperer = true; case 'K': $bPossedeGLien = true; $sValeurMemorisee = utf8_substr($sChaine,$nPosEsc+2,($nPosFinESC=utf8_strpos($sChaine,utf8_chr(27).utf8_substr($sChaine,$nPosEsc+1,1),$nPosEsc+1))-$nPosEsc-2); $sValeurAffichee = utf8_substr($sChaine,0,$nPosEsc) . utf8_substr($sChaine,$nPosFinESC+2); break; default: $sValeurMemorisee = $sChaine; $sValeurAffichee = $sChaine; return false; } return true; } function Fd01c6d85($valeur1,$valeur2,$nOptions,$bSens=true) { $nResultat = 0; if(!isset($valeur1)) { $nResultat = 1; } else if(!isset($valeur2)) { $nResultat = 1; } else { if (F5f7235e7($nOptions,nTRI_SANSFONCTIONGRAPH)) { $bPossedeGLien1 = false; $bPossedeGARecuperer1 = false; $sValeurMemorisee1 = ''; $sValeurAffichee1 = ''; F159221ea($valeur1,$bPossedeGLien1,$bPossedeGARecuperer1,$sValeurMemorisee1,$sValeurAffichee1); $bPossedeGLien1 = false; $bPossedeGARecuperer1 = false; $sValeurMemorisee1 = ''; $sValeurAffichee1 = ''; F159221ea($valeur2,$bPossedeGLien2,$bPossedeGARecuperer2,$sValeurMemorisee2,$sValeurAffichee2); if ($bPossedeGLien1 && !$bPossedeGLien2) return -1; else if (!$bPossedeGLien1 && $bPossedeGLien2) return 1; $valeur1 = $sValeurMemorisee1; $valeur2 = $sValeurMemorisee2; } if ($nOptions == triDéfaut) $nOptions = ccSansCasse + ccSansAccent; if ($nOptions & ccSansCasse) $nOptions=$nOptions-ccSansCasse+ccMinuscule; $valeur1 = Fcb2d4de8($valeur1, $nOptions); $valeur2 = Fcb2d4de8($valeur2, $nOptions); if ($valeur1 == $valeur2) return 0; if ( ($valeur1!='') && ($valeur2!='') ) { if ($nOptions & ccOrdreLexicographique) { $nTailleCommune = Fd1fcabe5($valeur1,$valeur2,DepuisDebut); if ($nTailleCommune>0) { $subValeur1 = utf8_substr($valeur1,$nTailleCommune); $subValeur2 = utf8_substr($valeur2,$nTailleCommune); } else { $subValeur1 = $valeur1; $subValeur2 = $valeur2; } if ( Fcb2d4de8(utf8_substr($subValeur1,0,1),ccSansAccent) == utf8_substr($subValeur2,0,1) ) { $nResultat = 1; } elseif ( utf8_substr($subValeur1,0,1) == Fcb2d4de8(utf8_substr($subValeur2,0,1),ccSansAccent) ) { $nResultat = -1; } $valeur1 = Fcb2d4de8($valeur1, ccSansAccent); $valeur2 = Fcb2d4de8($valeur2, ccSansAccent); } if ($nOptions & ccRespecteNumerique) { if (($nOrdreNum = Fe556daf7($valeur1,$valeur2))!=0) $nResultat = $nOrdreNum; } } if ($nResultat == 0) { $nResultat = strcmp($valeur1,$valeur2); } } if(!$bSens) { return -$nResultat; } return $nResultat; } class stSTRUCTURE { function stSTRUCTURE() { $nNbParams = func_num_args(); if ($nNbParams > 0) { $tabVars = array_keys(get_class_vars($sClasse=get_class($this))); $nNbMembres = count($tabVars,COUNT_NORMAL); $pclSource = func_get_arg(0); if ($nNbParams===1) { if (utf8_strcasecmp(get_class($pclSource),$sClasse) === 0) { $this->F278c4330($pclSource); return; } elseif (is_array($pclSource)) { $nNbParams = min(count($pclSource,COUNT_NORMAL),$nNbMembres); reset($pclSource); if (is_string(key($pclSource))) { $i=0; foreach ($pclSource as $membre => $valeur) { if ($i>=$nNbParams) break; $this->$membre = $valeur; ++$i; } } else { for($i=0; $i<$nNbParams; ++$i) { $this->$tabVars[$i] = $pclSource[$i]; } } } } else { if ($nNbParams > $nNbMembres) { $nNbParams = $nNbMembres; } for($i=0; $i<$nNbParams; ++$i) { $this->$tabVars[$i] = func_get_arg($i); } } } } function F278c4330($pclSource) { $tabVars = array_keys(get_class_vars(get_class($this))); $nNbMembres = count($tabVars,COUNT_NORMAL); for($i=0; $i<$nNbMembres; ++$i) { $this->$tabVars[$i] = $pclSource->$tabVars[$i]; } } } function FormateNum( $Nombre, $Format, $sForceSeparateurDecimal=null ) { if (utf8_strpos($Format,'%')!==false) { $Nombre*=100; } $StrNombre = (string)$Nombre; if ( $Format == "" ) return $StrNombre; if ( $StrNombre == "") $StrNombre = "0"; $bNegatif = $StrNombre{0} == '-'; if ($bNegatif) { $StrNombre = utf8_substr( $StrNombre, 1 ); } if ((F61bc61eb($Format,'(') && F0728da76($Format,')'))) { if ($bNegatif) { $bNegatif = false; } else { $Format = utf8_substr($Format,1,utf8_strlen($Format)-2); } } $bSigneAjoute =false; $bChiffreInsere=0; global $_gszSEPDEC, $_gszSEPMIL; if (!isset($sForceSeparateurDecimal)) $sForceSeparateurDecimal = $_gszSEPDEC; $nTrailing0 = F056ceb59( $Format, ',' ) - F056ceb59( $StrNombre, '.'); $nPosDernierChiffre = max((int)utf8_strpos($Format,'0'),(int)utf8_strrpos($Format,'9')); $bSrcSansDecimaux = (Fad3b84a7( $StrNombre, '.') == 0); $bDansPartieDecimale = false; $bVirguleNonInsere = false; $bAvecSeparateurMilliers = false; $nPositionSeparateurMillier = -1; $Resultat = ''; if ($nTrailing0 < 0) { return '+++++'; } $pCurSRC = 0; $Len = utf8_strlen($Format); for ($i=0;$i<$Len ;$i++) { $cMASQUE=utf8_substr($Format,$i,1); $cCharSRC = utf8_substr( $StrNombre, $pCurSRC, 1 ); $nNbChiffre = $bChiffreInsere; switch($cMASQUE) { case '0': { if ($nTrailing0 > 0) { --$nTrailing0; } else { if ($cCharSRC != '') { $Resultat .= $cCharSRC; ++$bChiffreInsere; ++$pCurSRC; } } } break; case '9': { if ($cCharSRC == '') { if ($bDansPartieDecimale && !$bVirguleNonInsere) { $Resultat .= '0'; ++$bChiffreInsere; } break; } if ($nTrailing0 > 0) { --$nTrailing0; } else { $Resultat .= $cCharSRC; ++$bChiffreInsere; ++$pCurSRC; } } break; case '+': { if ($bNegatif) { $Resultat .= '-'; $bSigneAjoute= true; } } break; case '.': case ',': { $bDansPartieDecimale= true; $bVirguleNonInsere = false; if ((utf8_substr($Format,$i + 1,1) == '0') && $bSrcSansDecimaux) { $bVirguleNonInsere = true; } else { if (($Resultat!='') && is_numeric(utf8_substr($Resultat,utf8_strlen($Resultat)-1,1))) { $Resultat .= $sForceSeparateurDecimal; } } if ($cCharSRC == '.') ++$pCurSRC; } break; case ' ': { if (($bChiffreInsere>0)) { $bAvecSeparateurMilliers = true; $nPositionSeparateurMillier = $bChiffreInsere; } else { break; } } default: { $Resultat .= $cMASQUE; } break; } if ( ($i == $nPosDernierChiffre)&& (($sPartieNumeriquePourArrondir=utf8_substr( $StrNombre, ((isset($StrNombre[$pCurSRC])&&($StrNombre[$pCurSRC]=='.')) ? $pCurSRC+1 : $pCurSRC) ))!='') ) { $Resultat = F74e5a6a0($Resultat,round( $StrNombre[$pCurSRC-1] . '.' . $sPartieNumeriquePourArrondir ) - $StrNombre[$pCurSRC-1]) ; } if ($bAvecSeparateurMilliers && ($nNbChiffre < $bChiffreInsere) && ($bChiffreInsere === $nPositionSeparateurMillier+3)) { $nTailleRes = utf8_strlen($Resultat); $Resultat = utf8_substr($Resultat,0,$nTailleRes-4) . $_gszSEPMIL . utf8_substr($Resultat,$nTailleRes-3); } } if ($bNegatif && !$bSigneAjoute) $Resultat = '-' . $Resultat; if ( (utf8_strpos($Format,'%')!==false)&&(utf8_strpos($Resultat,'%')===false) ) { $Resultat.='%'; } return $Resultat; } function F056ceb59( $pStrNombre, $cVirgule) { $StrNombre = utf8_ltrim($pStrNombre); $StrNombre = (($StrNombre!='') && (($StrNombre[0]=='+')||($StrNombre[0]=='-'))) ? utf8_substr($StrNombre,1) : $StrNombre; $nPosVirgule = utf8_strpos($StrNombre,$cVirgule); $Len = ($nPosVirgule!==false) ? $nPosVirgule : utf8_strlen($StrNombre); $Retour = F88da13bc($StrNombre, 0, $Len); return $Retour; } function F88da13bc($StrNombre, $nPosDepart, $nPosFin) { $Retour = 0; for($i=$nPosDepart; $i<$nPosFin; $i+=13) { $sNombreCourant = utf8_substr($StrNombre,$i,min(13,$nPosFin-$i)); $Retour += utf8_strlen((string)base_convert('1' . $sNombreCourant,BaseNumeriqueDefaut,BaseNumeriqueDefaut)) - 1; } return $Retour; } function Fad3b84a7($StrNombre, $cVirgule) { $nResult=0; $pStart = utf8_strpos( $StrNombre, $cVirgule); if ($pStart===false) return 0; $Retour = F88da13bc($StrNombre, $pStart+1, utf8_strlen($StrNombre)); return $Retour; } function F74e5a6a0($Resultat,$nIncDernierDigit) { $nTailleResultat = utf8_strlen($Resultat); for($iResultat=$nTailleResultat-1; $iResultat>=0; --$iResultat) { if (is_numeric(utf8_substr($Resultat,$iResultat,1))) { $nValeurDernierDigit = intval($Resultat[$iResultat]) + $nIncDernierDigit; if ($nValeurDernierDigit>9) { $Resultat[$iResultat] = (string)(10-$nValeurDernierDigit); return F74e5a6a0(utf8_substr($Resultat,0,$iResultat),1) . utf8_substr($Resultat,$iResultat); } else { $Resultat[$iResultat] = (string)$nValeurDernierDigit; return $Resultat; } } } return '1'; } ?>