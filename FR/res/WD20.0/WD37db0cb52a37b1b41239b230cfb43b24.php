<?php
//20.0.56.0 WL/VM/Tableau.php GF 
//VersionVI: 30F200066p
//(c) 2006-2008 PC SOFT  - Release
 if (!defined('__INC__FMK/Chaine.php')) { define('__INC__FMK/Chaine.php',true); include_once(WB_INCLUDE_PATH.'WD55acb2e708e26f23cb8956cd93e98123.php'); } if (!defined('__INC__FMK/Tableau.php')) { define('__INC__FMK/Tableau.php',true); include_once(WB_INCLUDE_PATH.'WDa8a47db63a35400f63385c7a68aa8d08.php'); } define('INDICE_ELEMENT_COURANT' , 0x87654321); define('INDICE_ELEMENT_PREMIER' , 0x00000001); define('INDICE_ELEMENT_DERNIER' , 0x87654322); define('INSERE_AVANT_COURANT' , 0x87654323); define('INSERE_APRES_COURANT' , 0x87654324); function FichierVersTableau(&$pclTableau, &$pclFichierAnalyse) { if (!defined('HF')) return; if (!is_object($pclFichierAnalyse) || (!Feee3b2d5($pclFichierAnalyse) && !F929705c7($pclFichierAnalyse)) ) { $sNomFichier = VersChaine($pclFichierAnalyse); $pclFichierAnalyse =& F9c2a1edc($sNomFichier); if (!isset($pclFichierAnalyse)) return; } if (!F1bb79b96($pclTableau,true)) return; if ($pclTableau->m_TypeReferenceGetType != TYPEWL_STRUCTURE) return ; $pclTableau->Fe551cca4(); while ($pclTableau->Fc30d7e5d()) { Operateur(8281,$pclTableau); $pclTableau =& Operateur(8252,$pclTableau,1); } $pclFichierAnalyse->Fad8a73f6(); $nSauvePosition = $pclFichierAnalyse->Fd172163b($pclFichierAnalyse->BestRub); $pclFichierAnalyse->Fa84e48aa($pclFichierAnalyse->BestRub); while(!$pclFichierAnalyse->bHEnDehors) { $nPosDernierElement = Operateur(8281,$pclTableau); $pclDernierElement =& Operateur(8252,$pclTableau,$nPosDernierElement); FichierVersMemoire($pclDernierElement,$pclFichierAnalyse->sNom); $pclFichierAnalyse->Fec3a1557($pclFichierAnalyse->BestRub); } HRetourPosition($nSauvePosition); } function ChaineVersTableau($sChaine, &$clTableau, $sSeparateur = RC, $sSeparateurColonne = TAB) { if ($clTableau->m_nIsXXX == 8) return ChaineVersTableau(GetValeur($clTableau)); if(!F35eaf986($clTableau)) { Erreur('ErreurWL',"ErreurTypeTableau",Fc34ec142("FCT_CHAINE_VERS_TABLEAU")); } if (!defined('__INC__WL/VM/VM.php')) { define('__INC__WL/VM/VM.php',true); include_once(WB_INCLUDE_PATH.'WD5dbe28512f8d7214d56280a3c2a295bf.php'); } if ( $clTableau->Fa6cd7f2a() == 2 ) { $arrayDepuisChaine = Fb05a9221($sChaine,$sSeparateur); $array2dimensions = array(); foreach ($arrayDepuisChaine as $sSousChaine) { $array2dimensions[] = Fb05a9221($sSousChaine,$sSeparateurColonne); } $clTableau->SetValeur($array2dimensions); $clTableau->Ffec98bdb(); DimensionModifie($clTableau,count($arrayDepuisChaine,COUNT_NORMAL),count($array2dimensions[0],COUNT_NORMAL)); } elseif ($clTableau->m_TypeReferenceGetType == TYPEWL_STRUCTURE) { $clTableau->Fe551cca4(); $arrayDepuisChaine = Fb05a9221($sChaine,$sSeparateur); foreach ($arrayDepuisChaine as $sSousChaine) { if ($sSousChaine!='') { Operateur(8281,$clTableau,Fb05a9221($sSousChaine,$sSeparateurColonne)); } } DimensionModifie($clTableau,count($arrayDepuisChaine,COUNT_NORMAL)); } else { $arrayDepuisChaine = Fb05a9221($sChaine,$sSeparateur); $clTableau->SetValeur($arrayDepuisChaine); $clTableau->Ffec98bdb(); DimensionModifie($clTableau,count($arrayDepuisChaine,COUNT_NORMAL)); } } function CSVVersTableau($sChaine, &$clTableau, $sSeparateurColonne = null) { if(!F35eaf986($clTableau)) { Erreur('ErreurWL',"ErreurTypeTableau",Fc34ec142("FCT_CSV_VERS_TABLEAU")); } if ( ( $clTableau->Fa6cd7f2a() == 2 ) || ($clTableau->m_TypeReferenceGetType == TYPEWL_STRUCTURE) ){ if (!isset($sSeparateurColonne)) $sSeparateurColonne = ";"; ChaineVersTableau($sChaine, $clTableau, "\n", $sSeparateurColonne); } else { if (!isset($sSeparateurColonne)) $sSeparateurColonne = "\n"; ChaineVersTableau($sChaine, $clTableau, $sSeparateurColonne); } } function TableauVersChaine(&$clTableau, $sSeparateur = RC, $sSeparateurColonne = TAB) { if(!F35eaf986($clTableau,-2)) { Erreur('ErreurWL',"ErreurTypeTableau",Fc34ec142("FCT_TABLEAU_VERS_CHAINE")); } $t = _array_map($clTableau); $sRetour = ''; if (!isset($t[0])) return; if (is_array($t[0])) { foreach ($t as $Tableau) { if ($sRetour!='') $sRetour .= $sSeparateur; $bPremier=true; foreach ($Tableau as $Element) { if (!$bPremier) $sRetour .= $sSeparateurColonne; $sRetour .= VersChaine($Element); $bPremier = false; } } } else { $Tableau = $t; $bPremier=true; foreach ($Tableau as $Element) { if (!$bPremier) $sRetour .= $sSeparateur; $sRetour .= VersChaine($Element); $bPremier = false; } } return $sRetour; } function TableauVersCSV(&$clTableau, $sSeparateurColonne = null) { if(!F35eaf986($clTableau,-2)) { Erreur('ErreurWL',"ErreurTypeTableau",Fc34ec142("FCT_TABLEAU_VERS_CSV")); } if ( ( $clTableau->Fa6cd7f2a() == 2 ) || ($clTableau->m_TypeReferenceGetType == TYPEWL_STRUCTURE) ){ if (!isset($sSeparateurColonne)) $sSeparateurColonne = ';'; return TableauVersChaine($clTableau,RC,$sSeparateurColonne); } if (!isset($sSeparateurColonne)) $sSeparateurColonne = RC; return TableauVersChaine($clTableau,$sSeparateurColonne); } function TableauAjoute(&$tableau, $valeur) { if(!F35eaf986($tableau)) { return Erreur('ErreurWL',"ErreurTypeTableau",Fc34ec142("FCT_TABLEAU_AJOUTE")); } if (F35eaf986($valeur,0.1)) { if ($tableau->Fa6cd7f2a() !== $valeur->Fa6cd7f2a()) { return Fe81a7f9e('ERR_CONCATENATION_AVEC_TABLEAUX_A_DIMENSIONS_DIFFERENTES','FCT_TABLEAU_AJOUTE'); } $tab = GetValeur($valeur); $nb = count($tab,COUNT_NORMAL); for($i=0; $i<$nb; ++$i) { $nPosition = Operateur(8281,$tableau,$tab[$i]); if (!isset($nPos)) $nPos = $nPosition; } unset($nPosition); return $nPos; } else { return Operateur(8281,$tableau,$valeur); } } function TableauAjouteLigne(&$Tableau) { if(!F35eaf986($Tableau,-2)) { Erreur('ErreurWL',"ErreurTypeTableau",Fc34ec142("FCT_TABLEAU_AJOUTE_LIGNE")); } $args = func_get_args(); if(F35eaf986($Tableau,1) && ($Tableau->m_TypeReferenceGetType != TYPEWL_STRUCTURE)) { return TableauAjoute($Tableau,$args[1]); } $Ligne = array_slice($args,1); return Operateur(8281,$Tableau,$Ligne); } function TableauCopie($tableauSource, &$tableauDestination) { if ( (!F35eaf986($tableauSource)) || (!F35eaf986($tableauDestination))) { Erreur('ErreurWL',"ErreurTypeTableau",Fc34ec142("FCT_TABLEAU_COPIE")); } Operateur(95,$tableauDestination,$tableauSource); } function TableauDeplaceLigne(&$tableau, $nIndiceDepart, $nIndiceArrive, $nOption = TD_DEPLACE) { TableauDeplace( $tableau, $nIndiceDepart, $nIndiceArrive, $nOption ); } function TableauEchangeLigne(&$tableau, $nIndiceDepart, $nIndiceArrive) { TableauDeplace( $tableau, $nIndiceDepart, $nIndiceArrive, TD_ECHANGE ); } function TableauInverse(&$tableau) { if(!F35eaf986($tableau,1)) { Erreur('ErreurWL',"ErreurTypeTableau",Fc34ec142("FCT_TABLEAU_INVERSE")); return; } $tableau->m_Valeur = array_reverse($tableau->m_Valeur,($tableau->F1e21db15() == TYPEWL_TABLEAU_ASSOCIATIF)); } function TableauDeplace(&$tableau, $nIndiceDepart, $nIndiceArrive, $nOption = TD_DEPLACE) { if(!F35eaf986($tableau,-2)) { Erreur('ErreurWL',"ErreurTypeTableau",Fc34ec142("FCT_TABLEAU_DEPLACE")); } if($nIndiceDepart < 1) { return; } if($nIndiceArrive < 1) { return; } if($nIndiceArrive == $nIndiceDepart) { return; } $tmp = $tmp2 = null; if($nOption == TD_ECHANGE) { $tmp = GetValeur(Operateur(8252,$tableau,$nIndiceDepart)); $tmp2 = GetValeur(Operateur(8252,$tableau,$nIndiceArrive)); Operateur(8253,$tableau,$nIndiceArrive,$tmp); Operateur(8253,$tableau,$nIndiceDepart,$tmp2); } else { $Element = _clone( Operateur(8252,$tableau,$nIndiceDepart) ); $tmp = GetValeur($Element); if($nIndiceArrive > $nIndiceDepart) { for($i=$nIndiceDepart;$i<$nIndiceArrive;$i++) { Operateur(8253,$tableau,$i,Operateur(8252,$tableau,$i+1)); } } else { for($i=$nIndiceDepart;$i>$nIndiceArrive;$i--) { Operateur(8253,$tableau,$i,Operateur(8252,$tableau,$i-1)); } } Operateur(8253,$tableau,$nIndiceArrive,$tmp); } } function TableauInfo(&$tableau, $nTypeInfo, $ParametreSupp = null) { if(!F35eaf986($tableau)) { Erreur('ErreurWL',"ErreurTypeTableau",Fc34ec142("FCT_TABLEAU_INFO")); } $tmp = _array_map(GetValeur($tableau)); switch($nTypeInfo) { case TI_DIMENSION : if (!isset($ParametreSupp)) $ParametreSupp = 1; if (!F35eaf986($tableau, floatval('0.' . $ParametreSupp))) { Erreur('ErreurWL',"ErreurTypeTableau",Fc34ec142("FCT_TABLEAU_INFO")); } for($i=$ParametreSupp; $i>1; $i--) { $tmp = $tmp[0]; } return count($tmp,COUNT_NORMAL); case TI_NB_TOTAL : return $tableau->GetOccurrence(); case TI_DYNAMIQUE : return (F1e21db15( $tableau ) == TYPEWL_TABLEAU); case TI_NOMBRECOLONNES: if (!F35eaf986($tableau,2)) { return 0; } return TableauInfo($tableau,TI_DIMENSION,2); case TI_NOMBREDIMENSIONS : $nNbDim = 0; while (is_array($tmp)) { if (count($tmp)==0) { return $nNbDim; } $tmp = isset($tmp[0]) ? $tmp[0] : null; ++$nNbDim; } return $nNbDim; break; case TI_NOMBRELIGNES : if (!F35eaf986($tableau,2)) { return 0; } return TableauInfo($tableau,TI_DIMENSION,1); break; case TI_TAILLETOTALE: FMK_Charge('WL/VM/VM.php',false); if (!array_key_exists(0,$tmp)) return 0; return TableauInfo($tableau,TI_NB_TOTAL) * TableauInfo($tableau,TI_TAILLEELEMENT); break; case TI_TAILLEELEMENT: FMK_Charge('WL/VM/VM.php',false); $pclSousElement =& $tableau; while (is_array($tmp)) { if (array_key_exists(0,$tmp)) { $pclSousElement =& SousType($pclSousElement,1); $tmp = $tmp[0]; } else { if (is_object($tableau)) { if ($tableau->m_nIsXXX === 8) $pclTableauWL =& GetValeur($tableau); else $pclTableauWL =& $tableau; if (!isset($pclTableauWL->m_TypeReference)) { return 0; } return DimensionRecupere($pclTableauWL->m_TypeReference); } else { return 0; } } } return DimensionRecupere(GetValeur($pclSousElement)); break; case TI_TYPECLE: if (!isset($tableau->m_nTypeCle)){ return constant('TYPEVAR_'.TYPEWL_CHAINE); } else{ return $tableau->m_nTypeCle; } break; case TI_TYPEELEMENT: if (isset($tableau->m_TypeReference)){ return TypeVar($tableau->m_TypeReference); } else{ return constant('TYPEVAR_'.$tableau->m_TypeReferenceGetType); } break; case TI_ASSOCIATIFAVECDOUBLON: return ( ($tableau->F1e21db15() == TYPEWL_TABLEAU_ASSOCIATIF) && ($tableau->__GetAvecDoublons()) ); default : Erreur('ErreurWL_1_Param',"ErreurValeurParam","Type d'information", Fc34ec142("FCT_TABLEAU_INFO")); return null; } } function TableauInsereLigne(&$tableau, $nIndice) { $tabLigne = func_get_args(); $tabLigne = array_slice($tabLigne,2); call_user_func_array('TableauAjouteLigne',array_merge(array(&$tableau),$tabLigne)); $nDerniereLigne = TableauInfo($tableau,TI_NOMBRELIGNES); TableauDeplaceLigne($tableau,$nDerniereLigne,$nIndice); } function TableauInsere(&$tableau, $nIndice, &$valeur) { if(!F35eaf986($tableau,1)) { Erreur('ErreurWL',"ErreurTypeTableau",Fc34ec142("FCT_TABLEAU_INSERE")); } if ($tableau->F1e21db15() == TYPEWL_TABLEAU_ASSOCIATIF) { Operateur( 95, SousType($tableau,$nIndice) , $valeur ); return; } $nNbElements= TableauInfo($tableau,TI_NB_TOTAL); switch($nIndice) { case INDICE_ELEMENT_PREMIER: $nIndice = 1; break; case INDICE_ELEMENT_DERNIER: $nIndice = $nNbElements+1; break; case INSERE_AVANT_COURANT: $nIndice = $tableau->m_nIndiceWLElementCourant; break; case INSERE_APRES_COURANT: $nIndice = $tableau->m_nIndiceWLElementCourant + 1; break; default: if (!is_numeric($nIndice)) $nIndice = $nNbElements+1; else $nIndice = intval($nIndice); } if ($nIndice < 1) { return; } if($nIndice > $nNbElements) { if (($nNbElements+1 == $nIndice)) { return Operateur(8281,$tableau,$valeur); } else { Erreur('ErreurWL',"ErreurTypeTableau",Fc34ec142("FCT_TABLEAU_INSERE")); } } $tabValeur = GetValeur($valeur); if (is_array($tabValeur)) { $i = 0; foreach ($tabValeur as $SousValeur) { TableauInsere($tableau, $nIndice+$i, $SousValeur); ++$i; } return; } Operateur(8281,$tableau); for($i=$nNbElements+1; $i>$nIndice; $i--) { Operateur(8253,$tableau,$i,Operateur(8252,$tableau,$i-1)); } Operateur(8253,$tableau,$nIndice,$valeur); } function TableauOccurrence(&$tableau) { if(!F35eaf986($tableau)) { Erreur('ErreurWL',"ErreurTypeTableau",Fc34ec142("FCT_TABLEAU_OCCURRENCE")); } return count(_array_map(GetValeur($tableau)),COUNT_NORMAL); } function TableauSupprime(&$tableau, $nIndice) { if(!F35eaf986($tableau,-2)) { Erreur('ErreurWL',"ErreurTypeTableau",Fc34ec142("FCT_TABLEAU_SUPPRIME")); } if ($tableau->F1e21db15() == TYPEWL_TABLEAU_ASSOCIATIF) { return $tableau->F2e68cd7d($nIndice); } $nNbElements= TableauInfo($tableau,TI_NB_TOTAL); switch($nIndice) { case INDICE_ELEMENT_PREMIER: $nIndice = 1; break; case INDICE_ELEMENT_DERNIER: $nIndice = $nNbElements; break; case INDICE_ELEMENT_COURANT: $nIndice = $tableau->m_nIndiceWLElementCourant; break; default: } if($nIndice < 1 || $nIndice > $nNbElements) { return 0; } return $tableau->F2e68cd7d($nIndice); } function TableauSupprimeLigne(&$tableau, $nIndice) { if(!F35eaf986($tableau,2)) { Erreur('ErreurWL',"ErreurTypeTableau",Fc34ec142("FCT_TABLEAU_SUPPRIME")); } if($nIndice < 1 || $nIndice > TableauInfo($tableau,TI_NOMBRELIGNES)) { return 0; } return $tableau->F2e68cd7d($nIndice); } function TableauSupprimeTout(&$tableau) { if(!F35eaf986($tableau)) { Erreur('ErreurWL',"ErreurTypeTableau",Fc34ec142("FCT_TABLEAU_SUPPRIME")); } DebutErreurAttendue(); if ($tableau->m_nIsXXX === 8) { return TableauSupprimeTout(GetValeur($tableau)); } else { $tableau->Fe551cca4(); } FinErreurAttendue(); return true; } function TableauTrie(&$tableau, $nTypeTri = TT_CROISSANT, $Option = null) { if(!F35eaf986($tableau)) { Erreur('ErreurWL',"ErreurTypeTableau",Fc34ec142("FCT_TABLEAU_TRIE")); } $t = GetValeur($tableau); Ff3c49668($t,$nTypeTri,$Option,$tableau); $tableau->SetValeur($t); $tableau->F27be7c2f( array($nTypeTri,$Option) ); unset($t); } function TableauAjouteTrie(&$tableau, $valeur) { if(!F35eaf986($tableau)) { Erreur('ErreurWL',"ErreurTypeTableau",Fc34ec142("FCT_TABLEAU_AJOUTE_TRIE")); } $tabOptontableauTrie = $tableau->F2a24efcc(); if (!isset($tabOptontableauTrie)) { Erreur('ErreurWL',"ErreurTypeTableau",Fc34ec142("FCT_TABLEAU_AJOUTE_TRIE")); } $RetourDefaut = TableauAjoute($tableau, $valeur); $tabAvant = _array_map($tableau); list($nTypeTri, $Option) = $tabOptontableauTrie; TableauTrie($tableau,$nTypeTri,$Option); $tabApres = _array_map($tableau); foreach ($tabAvant as $nIndice => $valeur) { if ($valeur != $tabApres[$nIndice]) return $nIndice+1; } return $RetourDefaut; } function _procCompareTableauStructureParMembre( &$Element1 , &$Element2 ) { $return = 0; $nMembre = 0; $nNbMembreTri = count($GLOBALS['__membreTri'],COUNT_NORMAL); while(($return == 0) && ($nMembre < $nNbMembreTri)) { $sMembreEnCours=$GLOBALS['__membreTri'][$nMembre]; if ( ($bInverse=($sMembreEnCours[0]=='-')) || ($sMembreEnCours[0]=='+') ) { $sMembreEnCours=utf8_substr($sMembreEnCours,1); } $return = Operateur(26716, Operateur(45142, $Element1, $sMembreEnCours), Operateur(45142, $Element2, $sMembreEnCours) ); $return = ($bInverse) ? -$return : $return; ++$nMembre; } return $return; } function _procCompareTableauUneOuDeuxDimensions( &$Element1 , &$Element2 ) { $valeurElement1 =& GetValeur($Element1); $valeurElement2 =& GetValeur($Element2); if (is_array($valeurElement1) && is_array($valeurElement2)) { $tabCols = $GLOBALS['__colTri']; $nCols = count($tabCols); $i = 0; $Retour = 0; while ( ( $i<$nCols) && ( 0 == $Retour = Operateur(26716 , $valeurElement1[abs($tabCols[$i])-1] , $valeurElement2[abs($tabCols[$i])-1] ) ) ) { ++$i; } if ($Retour==0) return 0; return ($tabCols[$i]>0) ? $Retour : -$Retour; } $Retour = Operateur(26716 , $valeurElement1 , $valeurElement2 ); return ($GLOBALS['__optTri'] == TT_CROISSANT) ? $Retour : -$Retour; } function TableauCherche(&$cltableau, $nTypeRecherche, $clValeur, $clIndiceDepart = null) { if(!F35eaf986($cltableau,1)) { Erreur('ErreurWL',"ErreurTypeTableau",Fc34ec142("FCT_TABLEAU_CHERCHE")); } if (is_object($cltableau)) { if ($cltableau->m_nIsXXX === 8) { $pclTableauWL =& GetValeur($cltableau); } else { $pclTableauWL =& $cltableau; } if ($pclTableauWL->m_TypeReferenceGetType === TYPEWL_STRUCTURE) { Erreur('ErreurWL','ErreurTypeTableau',Fc34ec142('FCT_TABLEAU_CHERCHE')); } $tabArray = GetValeur($pclTableauWL); } else { $pclTableauWL = null; $tabArray = GetValeur($pclTableauWL); } $valeur = VersPrimitif($clValeur); if (isset($clIndiceDepart)) $nIndiceDepart = VersPrimitif($clIndiceDepart); if(isset($nIndiceDepart) && (($nIndiceDepart < 1 || $nIndiceDepart > TableauInfo($cltableau,TI_NB_TOTAL)))) { return -1; } $tableau = array_map('_array_map', $tabArray ); switch($nTypeRecherche) { default : case TC_LINERAIRE_PREMIER : if(!isset($nIndiceDepart)) { $nIndiceDepart = 1; } global $nIndiceTCLineaire; $nIndiceTCLineaire = F6fea3d83($tableau, $nIndiceDepart, $valeur); return $nIndiceTCLineaire; case TC_LINERAIRE_DERNIER : if(!isset($nIndiceDepart)) { $nIndiceDepart = count($tableau); } global $nIndiceTCLineaire; $nIndiceTCLineaire = Fa84d48c0($tableau, $nIndiceDepart, $valeur); return $nIndiceTCLineaire; case TC_LINERAIRE_SUIVANT : global $nIndiceTCLineaire; if(isset($nIndiceTCLineaire) && $nIndiceTCLineaire > 0) { $nIndiceTCLineaire = F6fea3d83($tableau, $nIndiceTCLineaire + 1, $valeur); return $nIndiceTCLineaire; } return -1; case TC_LINERAIRE_PRECEDENT : global $nIndiceTCLineaire; if(isset($nIndiceTCLineaire) && $nIndiceTCLineaire > 0) { $nIndiceTCLineaire = Fa84d48c0($tableau, $nIndiceTCLineaire - 1, $valeur); return $nIndiceTCLineaire; } return -1; case TC_DICHOTOMIQUE : return F8d37da82($tableau, $valeur, 1); } } function F6fea3d83($tableau, $nIndice, $valeur) { $nBorneMax=count($tableau); for($i=$nIndice-1;$i<$nBorneMax;$i++) { if($tableau[$i] == $valeur) { return $i+1; } } return -1; } function Fa84d48c0($tableau, $nIndice, $valeur) { for($i=$nIndice-1;$i>=0;$i--) { if($tableau[$i] == $valeur) { return $i+1; } } return -1; } function F8d37da82($tableau, $valeur, $nIndiceDepart) { $nIndice = (int)(count($tableau)/2); if($tableau[$nIndice] == $valeur) { return $nIndice + $nIndiceDepart; } else if($tableau[$nIndice] < $valeur) { $tableau = array_slice($tableau,$nIndice+1, count($tableau) - $nIndice - 1); if(!empty($tableau)) { $n = F8d37da82($tableau, $valeur , $nIndiceDepart); if($n > -1) { return $nIndiceDepart + $nIndice + $n; } } } else { $tableau = array_slice($tableau,0, $nIndice); if(!empty($tableau)) { return F8d37da82($tableau, $valeur,$nIndiceDepart); } } return -1; } function F35eaf986($Tableau, $nNbDimension = null) { if (is_object($Tableau) && F1bb79b96($Tableau) && ($Tableau->m_nIsXXX != 8)){ $nDimension = $Tableau->Fa6cd7f2a(); } else{ $tmp = GetValeur($Tableau); if (is_object($Tableau) && ($Tableau->m_nIsXXX == 8) ) $tmp = GetValeur($tmp); $bTableau = (is_array($tmp)); if ( (!isset($nNbDimension)) || (!$bTableau) ) return $bTableau; if (is_object($tmp) && F1bb79b96($tmp)){ $nDimension = $tmp->Fa6cd7f2a(); } else { if (isset($tmp[0]) && $tmp[0]->m_nIsXXX & 64) return ($nNbDimension<=2); $tmp = _array_map($tmp); if (count($tmp,COUNT_NORMAL) === 0) return true; $nDimension = F4b10b9f7($tmp); } } if (!isset($nNbDimension)) { return true; } if ($nNbDimension<0) { return (abs($nNbDimension) >= $nDimension); } elseif ($nNbDimension<1){ return (10*($nNbDimension) <= $nDimension); } return ($nNbDimension == $nDimension); } function F4b10b9f7($tabTableau) { $tabDimension = $tabTableau; $nDimension = 1; while ( (isset($tabDimension[0])) && (is_array($tabDimension[0])) ) { $tabDimension = $tabDimension[0]; ++$nDimension; } return $nDimension; } ?>